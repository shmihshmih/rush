{"version":3,"sources":["./src/app/shared/components/word-card/popup/word-card-help/word-card-help.component.ts","./src/app/shared/components/word-card/popup/word-card-help/word-card-help.component.html","./src/app/shared/components/not-found/not-found.component.ts","./src/app/shared/components/not-found/not-found.component.html","./src/app/modules/blog/blog-routing.module.ts","./src/app/modules/auto-hr/pages/index/index.component.ts","./src/app/modules/auto-hr/pages/index/index.component.html","./src/app/shared/material.module.ts","./src/app/modules/languages/components/esc-settings-popup/esc-settings-popup.component.ts","./src/app/modules/languages/components/esc-settings-popup/esc-settings-popup.component.html","./src/app/shared/components/book-quest/book-quest.component.ts","./src/app/shared/components/book-quest/book-quest.component.html","./src/app/modules/languages/languages.module.ts","./src/app/modules/auto-hr/components/interview-popup/interview-popup.component.ts","./src/app/modules/auto-hr/components/interview-popup/interview-popup.component.html","./src/environments/environment.ts","./src/app/shared/components/word-card/word-card.component.ts","./src/app/shared/components/word-card/word-card.component.html","./src/app/modules/languages/pages/english-sentences-creator/english-sentences-creator.component.ts","./src/app/modules/languages/pages/english-sentences-creator/english-sentences-creator.component.html","./src/app/modules/auto-hr/components/task-answer-popup/task-answer-popup.component.ts","./src/app/modules/auto-hr/components/task-answer-popup/task-answer-popup.component.html","./src/app/core/services/blog/blog.service.ts","./src/app/shared/components/word-list/word-list.component.ts","./src/app/shared/components/word-list/word-list.component.html","./src/app/shared/shared.module.ts","./src/app/modules/socrates/socrates.module.ts","./src/app/modules/blog/pages/index/index.component.ts","./src/app/modules/blog/pages/index/index.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/components/word-card/popup/word-card-settings/word-card-settings.component.ts","./src/app/shared/components/word-card/popup/word-card-settings/word-card-settings.component.html","./src/app/shared/components/nav-list/nav-list.component.ts","./src/app/shared/components/nav-list/nav-list.component.html","./src/app/modules/languages/pages/index/index.component.ts","./src/app/modules/languages/pages/index/index.component.html","./src/app/shared/components/popup/add-list/add-list.component.ts","./src/app/shared/components/popup/add-list/add-list.component.html","./src/app/modules/blog/blog.module.ts","./src/app/core/services/esperanto/esperanto.service.ts","./src/app/app.module.ts","./src/app/modules/socrates/socrates-routing.module.ts","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/modules/languages/languages-routing.module.ts","./src/app/modules/auto-hr/auto-hr-routing.module.ts","./src/app/shared/components/word-lists/word-lists.component.ts","./src/app/shared/components/word-lists/word-lists.component.html","./src/app/shared/components/auth/auth.component.ts","./src/app/shared/components/auth/auth.component.html","./src/app/modules/auto-hr/components/mod-task-popup/mod-task-popup.component.ts","./src/app/modules/auto-hr/components/mod-task-popup/mod-task-popup.component.html","./src/app/core/services/api.service.ts","./src/app/modules/auto-hr/auto-hr.module.ts","./src/app/shared/components/index/index.component.ts","./src/app/shared/components/index/index.component.html","./src/app/core/services/autohr/auto-hr.service.ts","./src/app/app-routing.module.ts","./src/app/shared/components/popup/add-word/add-word.component.ts","./src/app/shared/components/popup/add-word/add-word.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\nclass DialogData {\r\n}\r\n\r\n@Component({\r\n  selector: 'app-word-card-help',\r\n  templateUrl: './word-card-help.component.html',\r\n  styleUrls: ['./word-card-help.component.scss']\r\n})\r\nexport class WordCardHelpComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<WordCardHelpComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {\r\n  }\r\n\r\n  closePopup(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>{{this.data['text']}}</p>\r\n<button color=\"primary\" (click)=\"closePopup()\" mat-button=\"\">Ок</button>\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Sorry, there is no page...</p>\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {IndexComponent} from './pages/index/index.component';\r\nimport {BookQuestComponent} from '../../shared/components/book-quest/book-quest.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: IndexComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'bookquest/:quest/:part',\r\n    component: BookQuestComponent,\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BlogRoutingModule {\r\n}\r\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {ITask} from '../../../../shared/models/autoHR/question.model';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {FormControl} from '@angular/forms';\nimport {ISobesConfigModel} from '../../../../shared/models/autoHR/sobesConfig.model';\nimport {MatSort} from '@angular/material/sort';\nimport {AutoHRService} from '../../../../core/services/autohr/auto-hr.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute} from '@angular/router';\nimport {InterviewPopupComponent} from '../../components/interview-popup/interview-popup.component';\nimport {TaskAnswerPopupComponent} from '../../components/task-answer-popup/task-answer-popup.component';\nimport {ModTaskPopupComponent} from '../../components/mod-task-popup/mod-task-popup.component';\nimport {ApiService} from '../../../../core/services/api.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ]\n})\nexport class IndexComponent implements OnInit, AfterViewInit {\n  // просто список тасков. Мы его не меняем, работаем и обрабатываем.\n  tasks: ITask[] = [];\n  dataSource = new MatTableDataSource<ITask>();\n  columnsToDisplay = ['id', 'question', 'type', 'difficulty', 'popularity'];\n  expandedElement: ITask | null = null;\n  step: 'start' | 'interview' | 'catalog' = 'start';\n\n  difficultiesList: string[] = [];\n  competencesList: string[] = [];\n  popularityList: string[] = [];\n\n  difficultiesControl = new FormControl();\n  competencesControl = new FormControl();\n  popularityControl = new FormControl();\n\n  tasksCount = 0;\n  typeModel = 0;\n\n  config: ISobesConfigModel;\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(\n    private api: AutoHRService,\n    public dialog: MatDialog,\n    public activatedRoute: ActivatedRoute,\n    public ahs: AutoHRService,\n    public apiService: ApiService\n  ) {\n    this.api.getAllTasks().subscribe((tasks) => {\n      this.tasks = tasks;\n      const tableDataSrc = this.setTableIndex(0, this.tasks);\n      this.dataSource = new MatTableDataSource(tableDataSrc);\n    });\n  }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      if (params.task_id) {\n        this.openSolution(params.task_id);\n      }\n    });\n    // получаем справочники\n    this.api.getDifficulties().subscribe((difficulties) => {\n      this.difficultiesList = difficulties;\n    });\n    this.api.getCompetences().subscribe((competences) => {\n      this.competencesList = competences;\n    });\n    this.api.getPopularity().subscribe((popularity) => {\n      this.popularityList = popularity;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  // попап, где проставляем конфиги\n  openInterviewPopup(): void {\n    const dialogRef = this.dialog.open(InterviewPopupComponent, {\n      data: {\n        difficultiesList: this.difficultiesList,\n        competencesList: this.competencesList,\n        popularityList: this.popularityList\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(config => {\n      if (config && config.count) {\n        this.step = 'interview';\n        this.tasksCount = config.count;\n        this.typeModel = config.type;\n        this.difficultiesControl.patchValue(config.difficulty);\n        this.competencesControl.patchValue(config.competence);\n        this.popularityControl.patchValue(config.popularity);\n        this.config = config;\n        this.setTableData(config);\n      }\n    });\n  }\n\n  // попап с ответом\n  openTaskAnswerPopup(task: ITask): void {\n    const dialogRef = this.dialog.open(TaskAnswerPopupComponent, {\n      maxHeight: '90vh',\n      width: '90%',\n      data: {task}\n    });\n    dialogRef.afterClosed().subscribe(data => {\n    });\n  }\n\n  // очищение таски пустышек, которые возникают на форме создания/редактировани\n  clearEmptyArrays(task: ITask): ITask {\n    const prevDifficulty: any[] = [];\n    const nextDifficulty: any[] = [];\n    const answerLink: any[] = [];\n    const answerCode: any[] = [];\n    task.prevDifficulty?.forEach(prev => {\n      if (prev) {\n        prevDifficulty.push(prev);\n      }\n    });\n    task.nextDifficulty?.forEach(next => {\n      if (next) {\n        nextDifficulty.push(next);\n      }\n    });\n    task.answer.link?.forEach(link => {\n      if (link) {\n        answerLink.push(link);\n      }\n    });\n    task.answer.code?.forEach(code => {\n      if (code) {\n        answerCode.push(code);\n      }\n    });\n    return {...task, prevDifficulty, nextDifficulty, answer: {...task.answer, link: answerLink, code: answerCode}};\n  }\n\n  // попап редактирования таска\n  openModTaskPopup(task?: ITask): void {\n    const dialogRef = this.dialog.open(ModTaskPopupComponent, {\n      maxHeight: '90vh',\n      width: '95%',\n      data: {task}\n    });\n    dialogRef.afterClosed().subscribe(data => {\n      if (!data) {\n        return;\n      }\n\n      data = this.clearEmptyArrays(data);\n\n      // с формы приходят только ид, тут мы докидываем caption, чтобы потом просто отображать в таблице\n      let prevDifficulty = [];\n      let nextDifficulty = [];\n\n      if (data.prevDifficulty.length > 0) {\n        prevDifficulty = data.prevDifficulty.map((pr: string) => {\n          return this.tasks.filter(task1 => {\n            return +task1.id === +pr;\n          })[0];\n        }).map((task2: ITask) => {\n          return {id: task2.id, caption: task2.question};\n        });\n      }\n\n      if (data.nextDifficulty.length > 0) {\n        nextDifficulty = data.nextDifficulty.map((pr: string) => {\n          return this.tasks.filter(task => {\n            return +task.id === +pr;\n          })[0];\n        }).map((task: ITask) => {\n          return {id: task.id, caption: task.question};\n        });\n      }\n\n      if (data._id) {\n        // update\n        this.ahs.updateTask(data).subscribe(res => {\n          this.tasks[data.tableIndex - 1] = {...data, prevDifficulty, nextDifficulty};\n          const tableDataSrc = this.setTableIndex(0, this.tasks);\n          this.dataSource = new MatTableDataSource(tableDataSrc);\n        });\n      } else {\n        // create\n        this.ahs.addTask(data).subscribe(res => {\n          this.tasks.push({...data, prevDifficulty, nextDifficulty});\n          const tableDataSrc = this.setTableIndex(0, this.tasks);\n          this.dataSource = new MatTableDataSource(tableDataSrc);\n        });\n      }\n    });\n  }\n\n  // открыть определенный ответ по id таска\n  openSolution(id: string): void {\n    this.step = 'catalog';\n    const task = this.tasks.filter(task => {\n      return task.id == id;\n    })[0];\n    this.openTaskAnswerPopup(task);\n  }\n\n  // обновляем данные в таблице в соответсвии с новым конфигом\n  refreshTable(): void {\n    this.config = {\n      count: this.tasksCount,\n      type: this.typeModel,\n      difficulty: this.difficultiesControl.value,\n      competence: this.competencesControl.value,\n      popularity: this.popularityControl.value\n    };\n    this.setTableData(this.config);\n  }\n\n  // фильтруем таски как надо и выставляем в таблицу\n  setTableData(config: ISobesConfigModel): void {\n    let newDataSource: ITask[] = [];\n\n    const matchedQuestions: ITask[] = [];\n    const matchedExercises: ITask[] = [];\n    const unmatchedQuestions: ITask[] = [];\n    const unmatchedExercises: ITask[] = [];\n\n    const questionNumber = Math.round(config.count * config.type / 100);\n    const exerciseNumber = config.count - questionNumber;\n\n    this.tasks.forEach((task: ITask) => {\n      const taskChecker = (task: ITask, config: ISobesConfigModel) => {\n        return task.competence.every(v => config.competence.includes(v));\n      };\n      if (config.difficulty.includes(task.difficulty) && config.popularity.includes(task.popularity) && taskChecker(task, config)) {\n        if (task.type === 'question') {\n          matchedQuestions.push(task);\n        }\n        if (task.type === 'exercise') {\n          matchedExercises.push(task);\n        }\n      } else {\n        if (task.type === 'question') {\n          unmatchedQuestions.push(task);\n        } else if (task.type === 'exercise') {\n          unmatchedExercises.push(task);\n        } else {\n          unmatchedQuestions.push(task);\n        }\n      }\n    });\n\n    const matchedQuestionsRandom = [];\n    for (let i = 0; i < matchedQuestions.length; i++) {\n      const it = this.randomizer(matchedQuestions);\n      matchedQuestionsRandom.push(it);\n    }\n\n    const matchedExercisesRandom = [];\n    for (let i = 0; i < matchedExercises.length; i++) {\n      const it = this.randomizer(matchedExercises);\n      matchedExercisesRandom.push(it);\n    }\n\n    const unmatchedQuestionsRandom = [];\n    for (let i = 0; i < unmatchedQuestions.length; i++) {\n      const it = this.randomizer(unmatchedQuestions);\n      unmatchedQuestionsRandom.push(it);\n    }\n\n    const unmatchedExercisesRandom = [];\n    for (let i = 0; i < unmatchedExercises.length; i++) {\n      const it = this.randomizer(unmatchedExercises);\n      unmatchedExercisesRandom.push(it);\n    }\n\n    const questions: ITask[] = matchedQuestionsRandom.concat(unmatchedQuestionsRandom);\n    const exercises: ITask[] = matchedExercisesRandom.concat(unmatchedExercisesRandom);\n\n    newDataSource.push(...questions.slice(0, questionNumber));\n    newDataSource.push(...exercises.slice(0, exerciseNumber));\n\n    if (questionNumber > questions.length) {\n      newDataSource.push(...exercises.slice(exerciseNumber, exerciseNumber + questionNumber - questions.length));\n    }\n\n    if (exerciseNumber > exercises.length) {\n      newDataSource.push(...questions.slice(questionNumber, questionNumber + exerciseNumber - exercises.length));\n    }\n    newDataSource = this.setTableIndex(0, newDataSource);\n    this.dataSource = new MatTableDataSource(newDataSource);\n  }\n\n  // перемешиваем все элементы в предложенном массиве\n  randomizer(arr: ITask[]): any {\n    const itemNum = Math.floor(Math.random() * arr.length);\n    return arr.splice(itemNum, 1)[0];\n  }\n\n  /**\n   * Сбрасываем все конфиги и идем на первую\n   * @param type: 'reset-filters' | 'close-block'\n   */\n  goToStart(type: 'reset-filters' | 'close-block'): void {\n    this.config = {\n      count: 0,\n      type: 0,\n      difficulty: [],\n      competence: [],\n      popularity: []\n    };\n\n    this.dataSource = new MatTableDataSource(this.setTableIndex(0, this.tasks));\n\n    this.difficultiesControl.reset();\n    this.competencesControl.reset();\n    this.popularityControl.reset();\n    this.tasksCount = 0;\n    this.typeModel = 0;\n\n    if (type === 'close-block') {\n      this.step = 'start';\n    }\n  }\n\n  // удаление таска\n  removeTask(task: ITask): void {\n    const isRemove = confirm('Удалить вопрос из таблицы?');\n    if (!isRemove) {\n      return;\n    }\n    this.ahs.delTask(task).subscribe(res => {\n      const newDataSource = this.dataSource.filteredData.filter((item: ITask) => {\n        return item.id !== task.id;\n      });\n      this.dataSource = new MatTableDataSource(newDataSource);\n    });\n  }\n\n  // связываем вручную пагинатор и таблицу и данные\n  pagination(paginator: any): void {\n    let paginatedTasks: any[] = this.tasks.slice(paginator._pageIndex * paginator._pageSize, paginator._pageIndex * paginator._pageSize + paginator._pageSize);\n    paginatedTasks = this.setTableIndex(paginator._pageIndex * paginator._pageSize, paginatedTasks);\n    this.dataSource = new MatTableDataSource(paginatedTasks);\n  }\n\n  // проставляем индексы для таблицы\n  setTableIndex(start: number, data: any[]): any[] {\n    const indexedData = [];\n    for (let i = start, j = 0; j < data.length; i++, j++) {\n      indexedData.push({...data[j], tableIndex: i + 1});\n    }\n    return indexedData;\n  }\n}\n","<div class=\"content\">\n  <div *ngIf=\"step === 'start'\" class=\"start-actions\">\n    <button mat-stroked-button (click)=\"openInterviewPopup()\">Собес</button>\n    <button mat-stroked-button (click)=\"step = 'catalog'\">Справочник</button>\n  </div>\n  <div *ngIf=\"(step === 'catalog') || (step === 'interview')\" class=\"catalog\">\n    <div class=\"catalog-action\">\n      <div [ngStyle]=\"{'display': 'flex'}\">\n\n        <mat-form-field class=\"example-form-field p-lr-8\" [ngStyle]=\"{'width': '20%'}\">\n          <mat-label>Кол-во вопросов</mat-label>\n          <input type=\"number\" matInput [(ngModel)]=\"tasksCount\">\n          <button mat-button *ngIf=\"tasksCount\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"tasksCount=0\">\n            <mat-icon>close</mat-icon>\n          </button>\n        </mat-form-field>\n\n        <div [ngStyle]=\"{'width': '20%'}\" class=\"p-lr-8\">\n          <div>\n            <mat-slider [(ngModel)]=\"typeModel\" aria-label=\"unit(s)\" [ngStyle]=\"{'width': '100%'}\"></mat-slider>\n          </div>\n        </div>\n\n        <mat-form-field appearance=\"fill\" [ngStyle]=\"{'width': '20%'}\" class=\"p-lr-8\">\n          <mat-label>Сложность</mat-label>\n          <mat-select [formControl]=\"difficultiesControl\" multiple>\n            <mat-select-trigger>\n              {{difficultiesControl.value ? difficultiesControl.value[0] : ''}}\n              <span *ngIf=\"difficultiesControl.value?.length > 1\" class=\"example-additional-selection\">\n        (+{{difficultiesControl.value.length - 1}} {{difficultiesControl.value?.length === 2 ? 'other' : 'others'}})\n      </span>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let difficultie of difficultiesList\"\n                        [value]=\"difficultie\">\n                      <span [ngSwitch]=\"difficultie\">\n                        <span *ngSwitchCase=\"'beginner'\">Пре-Джуниор</span>\n                        <span *ngSwitchCase=\"'junior'\">Джуниор</span>\n                        <span *ngSwitchCase=\"'middle'\">Мидл</span>\n                        <span *ngSwitchCase=\"'senior'\">Сеньор</span>\n                      </span>\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" [ngStyle]=\"{'width': '20%'}\" class=\"p-lr-8\">\n          <mat-label>Компетенции</mat-label>\n          <mat-select [formControl]=\"competencesControl\" multiple>\n            <mat-select-trigger>\n              {{competencesControl.value ? competencesControl.value[0] : ''}}\n              <span *ngIf=\"competencesControl.value?.length > 1\" class=\"example-additional-selection\">\n        (+{{competencesControl.value.length - 1}} {{competencesControl.value?.length === 2 ? 'other' : 'others'}})\n      </span>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let competence of competencesList\" [value]=\"competence\">\n              {{competence}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" [ngStyle]=\"{'width': '20%'}\" class=\"p-lr-8\">\n          <mat-label>Популярность</mat-label>\n          <mat-select [formControl]=\"popularityControl\" multiple>\n            <mat-select-trigger>\n              {{popularityControl.value ? popularityControl.value[0] : ''}}\n              <span *ngIf=\"popularityControl.value?.length > 1\" class=\"example-additional-selection\">\n        (+{{popularityControl.value.length - 1}} {{popularityControl.value?.length === 2 ? 'other' : 'others'}})\n      </span>\n            </mat-select-trigger>\n            <mat-option *ngFor=\"let popularity of popularityList\" [value]=\"popularity\">{{popularity}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n      </div>\n      <div class=\"filter-actions\">\n        <button mat-mini-fab color=\"primary\" (click)=\"refreshTable()\" matTooltip=\"Обновить таблицу в соответствии с фильтрами\"\n                [disabled]=\"tasksCount < 1 || typeModel < 1 || !difficultiesControl.value || !competencesControl.value || !popularityControl.value\">\n          <mat-icon>refresh</mat-icon>\n        </button>\n        <button mat-mini-fab color=\"primary\" (click)=\"goToStart('reset-filters')\" matTooltip=\"Сбросить все фильтры\">\n          <mat-icon>highlight_off</mat-icon>\n        </button>\n        <button *ngIf=\"(apiService.isAuth | async) === true\" mat-mini-fab color=\"primary\" matTooltip=\"Добавить новый вопрос\" (click)=\"openModTaskPopup()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n      <div fxLayoutAlign=\"center\" class=\"w-100\">\n        <mat-form-field>\n          <mat-label>Поиск</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Поиск\" #input>\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"mat-elevation-z8\">\n      <table mat-table\n             [dataSource]=\"dataSource\" multiTemplateDataRows matSort>\n        <!-- Id Column -->\n        <ng-container matColumnDef=\"id\">\n          <th mat-header-cell *matHeaderCellDef> №</th>\n          <td mat-cell *matCellDef=\"let element;\"> {{element.tableIndex}}</td>\n        </ng-container>\n        <!-- question Column -->\n        <ng-container matColumnDef=\"question\">\n          <th mat-header-cell *matHeaderCellDef>Вопрос</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.question}} </td>\n        </ng-container>\n        <!-- type Column -->\n        <ng-container matColumnDef=\"type\">\n          <th mat-header-cell *matHeaderCellDef> Тип</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <span *ngIf=\"element.type === 'question'\">Вопрос</span>\n            <span *ngIf=\"element.type === 'exercise'\">Задача</span>\n          </td>\n        </ng-container>\n        <!-- difficulty Column -->\n        <ng-container matColumnDef=\"difficulty\">\n          <th mat-header-cell *matHeaderCellDef> Сложность</th>\n          <td mat-cell *matCellDef=\"let element\">\n          <span [ngSwitch]=\"element.difficulty\">\n            <span *ngSwitchCase=\"'beginner'\">Пре-Джуниор</span>\n            <span *ngSwitchCase=\"'junior'\">Джуниор</span>\n            <span *ngSwitchCase=\"'middle'\">Мидл</span>\n            <span *ngSwitchCase=\"'senior'\">Сеньор</span>\n          </span>\n          </td>\n        </ng-container>\n        <!-- popularity Column -->\n        <ng-container matColumnDef=\"popularity\">\n          <th mat-header-cell *matHeaderCellDef> Популярность</th>\n          <td mat-cell *matCellDef=\"let element\"><span *ngIf=\"element.popularity\">{{element.popularity}} / 5</span></td>\n        </ng-container>\n        <!-- Expanded Content Column  -->\n        <ng-container matColumnDef=\"expandedDetail\">\n          <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n            <div class=\"example-element-detail\" [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n              <div class=\"example-element-diagram\">\n                <div [ngStyle]=\"{'display': 'flex', 'justify-content': 'space-between'}\" class=\"custom-h-margin\"\n                     *ngIf=\"element.competence && element.competence.length > 0\">\n                  <h2 class=\"custom-h-margin\">\n                    Вопрос:\n                  </h2>\n                  <mat-chip-list>\n                    <mat-chip color=\"primary\" *ngFor=\"let competence of element.competence\">{{competence}}</mat-chip>\n                  </mat-chip-list>\n                  <div *ngIf=\"(apiService.isAuth | async) === true\">\n                    <button mat-icon-button color=\"primary\" (click)=\"openModTaskPopup(element)\">\n                      <mat-icon>edit</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"warn\" (click)=\"removeTask(element)\">\n                      <mat-icon>delete_outline</mat-icon>\n                    </button>\n                  </div>\n                </div>\n                <div *ngIf=\"element.question\">\n                  <div>\n                    <div> {{element.question}} </div>\n                  </div>\n                </div>\n                <div [ngStyle]=\"{'margin-top': '16px'}\">\n                  <h2 class=\"custom-h-margin\">\n                    Описание вопроса:\n                  </h2>\n                  <div *ngIf=\"element.description || element.question\">\n                    <div>\n                      <div> {{element.description || element.question}} </div>\n                    </div>\n                  </div>\n                </div>\n                <div *ngIf=\"element.prevDifficulty.length > 0\" [ngStyle]=\"{'margin-top': '16px'}\">\n                  <h2 class=\"custom-h-margin\">\n                    Вопросы полегче\n                  </h2>\n                  <div *ngFor=\"let t of element.prevDifficulty\">\n                    <a [routerLink]=\"['task', t.id]\">{{t.caption}}</a>\n                  </div>\n                </div>\n                <div *ngIf=\"element.nextDifficulty.length > 0\" [ngStyle]=\"{'margin-top': '16px'}\">\n                  <h2 class=\"custom-h-margin\">\n                    Вопросы посложнее\n                  </h2>\n                  <div *ngFor=\"let t of element.nextDifficulty\">\n                    <a [routerLink]=\"['task', t.id]\">{{t.caption}}</a>\n                  </div>\n                </div>\n                <div class=\"detail-actions\">\n                  <button mat-raised-button color=\"primary\" (click)=\"openTaskAnswerPopup(element)\">Ответ</button>\n                </div>\n              </div>\n            </div>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n        <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n            class=\"example-element-row\"\n            [class.example-expanded-row]=\"expandedElement === element\"\n            (click)=\"expandedElement = expandedElement === element ? null : element\">\n        </tr>\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n      </table>\n      <mat-paginator #pagin [length]=\"tasks.length\" (page)=\"pagination(pagin)\" [pageSize]=\"tasks.length\"\n                     [pageSizeOptions]=\"[5, 10, 25, 50, 100, tasks.length]\" showFirstLastButtons></mat-paginator>\n    </div>\n  </div>\n  <div *ngIf=\"(step === 'catalog') || (step === 'interview')\" class=\"block-action\">\n    <button mat-mini-fab color=\"accent\" (click)=\"goToStart('close-block')\" matTooltip=\"Вернуться на первую страницу\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatPaginatorModule,\r\n    MatChipsModule,\r\n    MatSortModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    MatSliderModule,\r\n    MatIconModule,\r\n    MatPaginatorModule,\r\n    MatChipsModule,\r\n    MatSortModule,\r\n    MatTooltipModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormArray, FormBuilder, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-esc-settings-popup',\n  templateUrl: './esc-settings-popup.component.html',\n  styleUrls: ['./esc-settings-popup.component.scss']\n})\nexport class EscSettingsPopupComponent implements OnInit {\n  configForm: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<EscSettingsPopupComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private fb: FormBuilder\n  ) {\n    this.configForm = this.fb.group({\n      times: this.fb.array([]),\n      pronouns: this.fb.array([]),\n      sentenceType: this.fb.array([]),\n      verbs: this.fb.array([]),\n    });\n  }\n\n  ngOnInit(): void {\n    // пушим полученне данные в формате котролов\n    this.data.times.forEach(() => {\n      this.times.push(this.fb.control(false));\n    });\n    this.data.pronouns.forEach(() => {\n      this.pronouns.push(this.fb.control(false));\n    });\n    this.data.sentenceType.forEach(() => {\n      this.sentenceType.push(this.fb.control(false));\n    });\n    this.data.verbs.forEach(() => {\n      this.verbs.push(this.fb.control(false));\n    });\n  }\n\n  // выставляем эти переменные как массив контролов из формы configForm\n  get times(): any {\n    return this.configForm?.controls['times'] as FormArray;\n  }\n\n  get pronouns(): any {\n    return this.configForm?.controls['pronouns'] as FormArray;\n  }\n\n  get sentenceType(): any {\n    return this.configForm?.controls['sentenceType'] as FormArray;\n  }\n\n  get verbs(): any {\n    return this.configForm?.controls['verbs'] as FormArray;\n  }\n\n  setVerbs(mode: 'all' | 'irregular' | 'regular', status): void {\n    switch (mode) {\n      case 'all':\n        if (status) {\n          this.verbs.controls.forEach((el, i) => {\n            this.verbs.controls[i].patchValue(true);\n          });\n        } else {\n          this.verbs.controls.forEach((el, i) => {\n            this.verbs.controls[i].patchValue(false);\n          });\n        }\n        break;\n      case 'irregular':\n        const allIrregular = this.data.verbs.map((v, i) => {\n          if (v.word_type.indexOf('irregular_verbs') !== -1) {\n            return i;\n          }\n        }).filter(el => el);\n        if (status) {\n          allIrregular.forEach((el) => {\n            this.verbs.controls[el].patchValue(true);\n          });\n        } else {\n          allIrregular.forEach((el) => {\n            this.verbs.controls[el].patchValue(false);\n          });\n        }\n        break;\n      case 'regular':\n        const regular = this.data.verbs.map((v, i) => {\n          if (v.word_type.indexOf('irregular_verbs') === -1) {\n            return i;\n          }\n        }).filter(el => el);\n        if (status) {\n          regular.forEach((el) => {\n            this.verbs.controls[el].patchValue(true);\n          });\n        } else {\n          regular.forEach((el) => {\n            this.verbs.controls[el].patchValue(false);\n          });\n        }\n        break;\n    }\n  }\n\n  submitConfigs(): void {\n    const chosenTimes = this.configForm.value.times.map((el, i) => {\n      return el === true ? this.data.times[i] : null;\n    }).filter(el => el);\n    const chosenPronouns = this.configForm.value.pronouns.map((el, i) => {\n      return el === true ? this.data.pronouns[i] : null;\n    }).filter(el => el);\n    const chosenSentenceType = this.configForm.value.sentenceType.map((el, i) => {\n      return el === true ? this.data.sentenceType[i] : null;\n    }).filter(el => el);\n    const chosenVerbs = this.configForm.value.verbs.map((el, i) => {\n      return el === true ? this.data.verbs[i] : null;\n    }).filter(el => el);\n    const config = {times: chosenTimes, pronouns: chosenPronouns, sentenceType: chosenSentenceType, verbs: chosenVerbs};\n    this.dialogRef.close({config});\n  }\n\n  closePopup(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<div fxFlex fxLayout=\"row\" [formGroup]=\"configForm\">\n  <div fxFlex fxLayout=\"column\">\n    <h1>Типы предложений</h1>\n    <div formArrayName=\"sentenceType\">\n      <div *ngFor=\"let sentenceType of sentenceType.controls; let inx = index;\">\n        <p>\n          <mat-checkbox [formControlName]=\"inx\">{{data.sentenceType[inx]}}</mat-checkbox>\n        </p>\n      </div>\n    </div>\n  </div>\n  <div fxFlex fxLayout=\"column\">\n    <h1>Времена</h1>\n    <div formArrayName=\"times\">\n      <div *ngFor=\"let time of times.controls; let inx = index;\">\n        <p>\n          <mat-checkbox [formControlName]=\"inx\">{{data.times[inx]}}</mat-checkbox>\n        </p>\n      </div>\n    </div>\n  </div>\n  <div fxFlex fxLayout=\"column\">\n    <h1>Местоимения</h1>\n    <div formArrayName=\"pronouns\">\n      <div *ngFor=\"let pronoun of pronouns.controls; let inx = index;\">\n        <p>\n          <mat-checkbox [formControlName]=\"inx\">{{data.pronouns[inx].english}} - {{data.pronouns[inx].russian}}</mat-checkbox>\n        </p>\n      </div>\n    </div>\n  </div>\n  <div fxFlex fxLayout=\"column\">\n    <h1>Глаголы</h1>\n    <div>\n      <p>\n        <mat-checkbox #checkbox1 (click)=\"setVerbs('all', !checkbox1.checked)\">Все глаголы</mat-checkbox>\n      </p>\n      <p>\n        <mat-checkbox #checkbox2 (click)=\"setVerbs('regular', !checkbox2.checked)\">regular verbs</mat-checkbox>\n      </p>\n      <p>\n        <mat-checkbox #checkbox3 (click)=\"setVerbs('irregular', !checkbox3.checked)\">irregular verbs</mat-checkbox>\n      </p>\n      <hr>\n      <div formArrayName=\"verbs\">\n        <div *ngFor=\"let verb of verbs.controls; let inx = index;\">\n          <p>\n            <mat-checkbox [formControlName]=\"inx\">{{data.verbs[inx].english}} - {{data.verbs[inx].russian}}</mat-checkbox>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"actions\">\n    <button color=\"primary\" (click)=\"closePopup()\" mat-button=\"\">Отмена</button>\n    <button color=\"primary\" (click)=\"submitConfigs()\" mat-button=\"\">Принять</button>\n  </div>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {BlogService} from '../../../core/services/blog/blog.service';\r\nimport {Location} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-book-quest',\r\n  templateUrl: './book-quest.component.html',\r\n  styleUrls: ['./book-quest.component.scss']\r\n})\r\nexport class BookQuestComponent implements OnInit, OnDestroy {\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n  questPart: { type: string, data: string, order: number }[];\r\n  questTitle: string;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private blogService: BlogService,\r\n              public location: Location\r\n  ) {\r\n    this.activatedRoute.params.pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(params => {\r\n      if (params.quest) {\r\n        this.blogService.getQuestPart(params.quest, params.part).subscribe((text: { part: string, id: number }) => {\r\n          this.questTitle = params.quest;\r\n          const parts = [];\r\n\r\n          // собираем массив ссылок, это просто текст в сообщении, который имеет форму [число]\r\n          // если таковых нет, то помещается один объект type: 'no-data' с ссылкой назад\r\n          let linkMatches: any[] = text[0].part.match(/\\[[0-9]*]/g);\r\n          if (linkMatches) {\r\n            linkMatches = linkMatches.map((link: string, i) => {\r\n              return {type: 'link', order: i, data: link.slice(1, link.length - 1)};\r\n            });\r\n          } else {\r\n            linkMatches = [{type: 'no-data'}];\r\n          }\r\n\r\n          // собираем массив текстов, без ссылок\r\n          // если таковых нет, то помещается один объект type: 'no-data' с ссылкой назад\r\n          let textMatchas = text[0].part.split(/\\[[0-9]*]/g);\r\n          if (textMatchas) {\r\n            textMatchas = textMatchas.map((txt: string, i) => {\r\n              return {type: 'txt', order: i, data: txt};\r\n            });\r\n          } else {\r\n            textMatchas = [{type: 'no-data'}];\r\n          }\r\n\r\n          // составляем общий объект текстов и ссылок, чтобы разместить на странице через ngSwitch. Исходит из того, что первый элемент - не ссылка.\r\n          const allPartsNumber = linkMatches.length + textMatchas.length;\r\n          for (let i = 0; allPartsNumber > i; i++) {\r\n            const textToPush = textMatchas.shift();\r\n            if (textToPush) {\r\n              parts.push(textToPush);\r\n            }\r\n            const linkToPush = linkMatches.shift();\r\n            if (linkToPush) {\r\n              parts.push(linkToPush);\r\n            }\r\n          }\r\n          this.questPart = parts;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"row\" fxFlex fxLayoutAlign=\"center center\" class=\"w-100 lh-2rem fs-2rem\">\r\n  <div class=\"book-quest-part-container p-16\">\r\n      <span *ngFor=\"let part of questPart\">\r\n    <span *ngIf=\"part\" ngSwitch=\"{{part.type}}\">\r\n\r\n      <span *ngSwitchCase=\"'txt'\">{{part.data}}</span>\r\n\r\n      <span *ngSwitchCase=\"'link'\">\r\n        <a class=\"td-underline\" [routerLink]=\"['/', 'blog', 'bookquest', questTitle, part.data]\">[{{part.data}}]</a>\r\n      </span>\r\n\r\n      <p *ngSwitchCase=\"'no-data'\">\r\n        <a class=\"td-underline\" (click)=\"location.back()\">[назад]</a>\r\n      </p>\r\n\r\n    </span>\r\n  </span>\r\n  </div>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {EsperantoService} from '../../core/services/esperanto/esperanto.service';\r\nimport {FlexModule} from '@angular/flex-layout';\r\nimport {IndexComponent} from './pages/index/index.component';\r\nimport {LanguagesRoutingModule} from './languages-routing.module';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport {EnglishSentencesCreatorComponent} from './pages/english-sentences-creator/english-sentences-creator.component';\r\nimport {EscSettingsPopupComponent} from './components/esc-settings-popup/esc-settings-popup.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [IndexComponent, EnglishSentencesCreatorComponent, EscSettingsPopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FlexModule,\r\n    LanguagesRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [EsperantoService]\r\n})\r\nexport class LanguagesModule {\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormControl} from '@angular/forms';\r\nimport {ISobesConfigModel} from '../../../../shared/models/autoHR/sobesConfig.model';\r\n\r\n@Component({\r\n  selector: 'app-interview-popup',\r\n  templateUrl: './interview-popup.component.html',\r\n  styleUrls: ['./interview-popup.component.css']\r\n})\r\nexport class InterviewPopupComponent implements OnInit {\r\n\r\n  difficultiesControl = new FormControl();\r\n  competencesControl = new FormControl();\r\n  popularityControl = new FormControl();\r\n\r\n  tasksCount = 0;\r\n  typeModel = 0;\r\n\r\n  config: ISobesConfigModel;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<InterviewPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(isStart: boolean): void {\r\n    this.config = {\r\n      count: this.tasksCount,\r\n      type: this.typeModel,\r\n      difficulty: this.difficultiesControl.value,\r\n      competence: this.competencesControl.value,\r\n      popularity: this.popularityControl.value\r\n    };\r\n    if (isStart) {\r\n      this.dialogRef.close(this.config);\r\n    } else {\r\n      this.dialogRef.close();\r\n    }\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Состав вопросов:</h1>\r\n<div mat-dialog-content>\r\n  <div>\r\n    <div>\r\n      <mat-form-field class=\"example-form-field\" [ngStyle]=\"{'width': '100%'}\">\r\n        <mat-label>Кол-во вопросов</mat-label>\r\n        <input type=\"number\" matInput [(ngModel)]=\"tasksCount\">\r\n        <button mat-button *ngIf=\"tasksCount\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"tasksCount=0\">\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n  <div>\r\n    <div>\r\n      Типы тасков (вопросы\\задачи)\r\n    </div>\r\n    <div>\r\n      <mat-slider [(ngModel)]=\"typeModel\" aria-label=\"unit(s)\" [ngStyle]=\"{'width': '100%'}\"></mat-slider>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n  <div>\r\n    <div>\r\n      <mat-form-field appearance=\"fill\" [ngStyle]=\"{'width': '100%'}\">\r\n        <mat-label>Сложность</mat-label>\r\n        <mat-select [formControl]=\"difficultiesControl\" multiple>\r\n          <mat-select-trigger>\r\n            {{difficultiesControl.value ? difficultiesControl.value[0] : ''}}\r\n            <span *ngIf=\"difficultiesControl.value?.length > 1\" class=\"example-additional-selection\">\r\n        (+{{difficultiesControl.value.length - 1}} {{difficultiesControl.value?.length === 2 ? 'other' : 'others'}})\r\n      </span>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let difficultie of data.difficultiesList\"\r\n                      [value]=\"difficultie\">\r\n                      <span [ngSwitch]=\"difficultie\">\r\n                        <span *ngSwitchCase=\"'beginner'\">Пре-Джуниор</span>\r\n                        <span *ngSwitchCase=\"'junior'\">Джуниор</span>\r\n                        <span *ngSwitchCase=\"'middle'\">Мидл</span>\r\n                        <span *ngSwitchCase=\"'senior'\">Сеньор</span>\r\n                      </span>\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n  <div>\r\n    <div>\r\n      <mat-form-field appearance=\"fill\" [ngStyle]=\"{'width': '100%'}\">\r\n        <mat-label>Компетенции</mat-label>\r\n        <mat-select [formControl]=\"competencesControl\" multiple>\r\n          <mat-select-trigger>\r\n            {{competencesControl.value ? competencesControl.value[0] : ''}}\r\n            <span *ngIf=\"competencesControl.value?.length > 1\" class=\"example-additional-selection\">\r\n        (+{{competencesControl.value.length - 1}} {{competencesControl.value?.length === 2 ? 'other' : 'others'}})\r\n      </span>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let competence of data.competencesList\" [value]=\"competence\">\r\n            {{competence}}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <hr>\r\n  <div>\r\n    <div>\r\n      <mat-form-field appearance=\"fill\" [ngStyle]=\"{'width': '100%'}\">\r\n        <mat-label>Популярность</mat-label>\r\n        <mat-select [formControl]=\"popularityControl\" multiple>\r\n          <mat-select-trigger>\r\n            {{popularityControl.value ? popularityControl.value[0] : ''}}\r\n            <span *ngIf=\"popularityControl.value?.length > 1\" class=\"example-additional-selection\">\r\n        (+{{popularityControl.value.length - 1}} {{popularityControl.value?.length === 2 ? 'other' : 'others'}})\r\n      </span>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let popularity of data.popularityList\" [value]=\"popularity\">{{popularity}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button (click)=\"onNoClick(false)\">Отмена</button>\r\n  <button mat-button cdkFocusInitial (click)=\"onNoClick(true)\">Начать</button>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  server: 'http://localhost:16059',\r\n  MAIN_SERVER: 'http://localhost:16059/api/',\r\n  MAIN_SERVER_AUTH: 'http://localhost:16059/api/user/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {Component, HostListener, OnChanges, OnDestroy, OnInit, SimpleChange, SimpleChanges} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {EsperantoService} from '../../../core/services/esperanto/esperanto.service';\r\nimport {switchMap, takeUntil, tap} from 'rxjs/operators';\r\nimport {forkJoin, Observable, Subject} from 'rxjs';\r\nimport {IWord} from '../../models/esperanto/word.interface';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {WordCardHelpComponent} from './popup/word-card-help/word-card-help.component';\r\nimport {WordCardSettingsComponent} from './popup/word-card-settings/word-card-settings.component';\r\n\r\n@Component({\r\n  selector: 'app-word-card',\r\n  templateUrl: './word-card.component.html',\r\n  styleUrls: ['./word-card.component.scss']\r\n})\r\nexport class WordCardComponent implements OnInit, OnDestroy, OnChanges {\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n  listWord: IWord[] = [];\r\n  activeWordLists: string[] = [];\r\n  isRepeat = false;\r\n  startLang: 'russian' | 'english' | 'esperanto' = 'russian';\r\n  finishLang: 'russian' | 'english' | 'esperanto' = 'esperanto';\r\n  isShowAnswer = false;\r\n  isAuto = false;\r\n  timer = null;\r\n  wordInterval = null;\r\n  activeWord: Subject<IWord> = new Subject();\r\n\r\n  // при нажатии на клавишу переключается слово\r\n  @HostListener('window:keyup', ['$event'])\r\n  keyEvent(event: KeyboardEvent): void {\r\n    if (event.key === 'ArrowRight' || event.key === ' ') {\r\n      this.showAnswer();\r\n    }\r\n  }\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private esperantoService: EsperantoService,\r\n              public dialog: MatDialog,\r\n              private router: Router) {\r\n    // получаем мод, для конечного языка\r\n    this.finishLang = this.router.url.split('/')[1] as 'russian' | 'english' | 'esperanto';\r\n    // получаем список для загрузки\r\n    this.activatedRoute.params.pipe(\r\n      switchMap(params => {\r\n        if (params.wordList) {\r\n          this.activeWordLists.push(params.wordList);\r\n          return this.esperantoService.getWordsByWordList(params.wordList);\r\n        }\r\n      }),\r\n      tap(words => {\r\n        this.listWord = words;\r\n      }),\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(params => {\r\n      this.nextWord();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  nextWord(): void {\r\n    this.isShowAnswer = false;\r\n    if (this.listWord.length === 0) {\r\n      return;\r\n    }\r\n    const randomNumber = Math.floor(Math.random() * this.listWord.length);\r\n    if (this.isRepeat) {\r\n      this.activeWord.next(this.listWord[randomNumber]);\r\n    } else {\r\n      this.activeWord.next(this.listWord.splice(randomNumber, 1)[0]);\r\n    }\r\n  }\r\n\r\n  showAnswer(): void {\r\n    if (this.isShowAnswer === true) {\r\n      this.isShowAnswer = false;\r\n      this.nextWord();\r\n    } else {\r\n      this.isShowAnswer = true;\r\n    }\r\n  }\r\n\r\n  openSettings(): void {\r\n    const dialogRef = this.dialog.open(WordCardSettingsComponent, {\r\n      panelClass: ['wordCardSettingsPopup'],\r\n      data: {\r\n        activeWordLists: this.activeWordLists,\r\n        settings: {\r\n          isRepeat: this.isRepeat,\r\n          startLang: this.startLang,\r\n          finishLang: this.finishLang,\r\n          isAuto: this.isAuto,\r\n          timer: this.timer\r\n        }\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n      this.setCardSettings(result.settings, result.wordLists);\r\n    });\r\n  }\r\n\r\n  openHelp(): void {\r\n    const dialogRef = this.dialog.open(WordCardHelpComponent, {\r\n      width: '500px',\r\n      data: {text: 'Второе упражнение создано для тренировки слов. В строке \"Дано\" указывается то, что спрашивается. В строке \"Ответ\" - правильный вариант. В настройках можно выбрать списки слов, которые будут использованы в упражнении. Можно выбрать будут ли повторяться слова. Можно выбрать будет ли проверяться русский или английский перевод. Приятной тренировки! Для критики, пожеланий, предложений: shmihshmih@gmail.com '}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  setCardSettings(\r\n    settings: ISettings = {isRepeat: false, startLang: 'russian', finishLang: 'esperanto', isAuto: false, timer: null},\r\n    wordLists = []): void {\r\n    const allWordLists = [];\r\n    this.listWord = [];\r\n    this.activeWordLists = [];\r\n    this.isRepeat = settings.isRepeat;\r\n    this.startLang = settings.startLang;\r\n    this.finishLang = settings.finishLang;\r\n    this.isAuto = settings.isAuto;\r\n    this.timer = settings.timer;\r\n    wordLists.forEach(list => {\r\n      allWordLists.push(this.esperantoService.getWordsByWordList(list.collection_caption));\r\n      this.activeWordLists.push(list.title);\r\n    });\r\n    const allWordsFromAllLists: Observable<IWord[]> = forkJoin<IWord>([...allWordLists]);\r\n    allWordsFromAllLists.subscribe((words: []) => {\r\n        words.forEach((list: IWord[]) => this.listWord.push(...list));\r\n        this.setWordInterval();\r\n      }\r\n    );\r\n  }\r\n\r\n  setWordInterval(): void {\r\n    clearInterval(this.wordInterval);\r\n    if (this.isAuto) {\r\n      this.wordInterval = setInterval(() => {\r\n        this.showAnswer();\r\n      }, this.timer);\r\n    }\r\n  }\r\n}\r\n\r\nexport interface ISettings {\r\n  isRepeat: boolean;\r\n  startLang: 'russian' | 'english' | 'esperanto';\r\n  finishLang: 'russian' | 'english' | 'esperanto';\r\n  isAuto: boolean;\r\n  timer: number;\r\n}\r\n","<div fxLayout=\"column\" fxFlex fxLayoutAlign=\"center center\" (keydown)=\"nextWord()\">\r\n  <div *ngIf=\"activeWord | async as word\">\r\n    <div>\r\n      <div fxLayoutAlign=\"center center\" class=\"fs-10vw ow-anywhere lh-1\">{{word[startLang]}}</div>\r\n    </div>\r\n    <div>\r\n      <div fxLayoutAlign=\"center center\" class=\"fs-10vw ow-anywhere lh-1\"\r\n           *ngIf=\"isShowAnswer\">{{word[finishLang]}}</div>\r\n      <div fxLayoutAlign=\"center center\" class=\"fs-10vw ow-anywhere lh-1\" *ngIf=\"!isShowAnswer\">?</div>\r\n    </div>\r\n    <div fxLayoutAlign=\"center center\">\r\n      <button color=\"primary\" (click)=\"showAnswer()\" mat-button=\"\">Ответ</button>\r\n      <button color=\"primary\" (click)=\"nextWord()\" mat-button=\"\">Следующее</button>\r\n      <button color=\"primary\" (click)=\"openSettings()\" mat-button=\"\">Настройки</button>\r\n      <button color=\"primary\" (click)=\"openHelp()\" mat-button=\"\">Помощь</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {IWord} from '../../../../shared/models/esperanto/word.interface';\r\nimport {EsperantoService} from '../../../../core/services/esperanto/esperanto.service';\r\nimport {ApiService} from '../../../../core/services/api.service';\r\nimport {forkJoin, Observable, Subject} from 'rxjs';\r\nimport {AddListComponent} from '../../../../shared/components/popup/add-list/add-list.component';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {EscSettingsPopupComponent} from '../../components/esc-settings-popup/esc-settings-popup.component';\r\nimport {MatDialog} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-english-sentences-creator',\r\n  templateUrl: './english-sentences-creator.component.html',\r\n  styleUrls: ['./english-sentences-creator.component.scss']\r\n})\r\nexport class EnglishSentencesCreatorComponent implements OnInit, OnDestroy {\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n  // все используемые слова в предложении\r\n  pronouns: IWord[];\r\n  verbs: IWord[];\r\n  // гласные\r\n  vowels = ['a', 'e', 'i', 'u', 'o'];\r\n  // согласные\r\n  consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\r\n  // времена\r\n  times = [\r\n    'Present Simple', 'Past Simple', 'Future Simple', 'Present Continues', 'Past Continues', 'Future Continues',\r\n    'Present Perfect', 'Past Perfect', 'Future Perfect', 'Present Perfect Continues', 'Past Perfect Continues',\r\n    'Future Perfect Continues'\r\n  ];\r\n  // типы предложений\r\n  sentenceType: ['affirmative', 'interrogative', 'negative'] = ['affirmative', 'interrogative', 'negative'];\r\n  randomSentence: {\r\n    Time: string;\r\n    SentenceType: string;\r\n    Pronoun: IWord;\r\n    Verb: IWord;\r\n    answer: string;\r\n  };\r\n  isShowAnswer = false;\r\n\r\n  constructor(\r\n    private esperantoService: EsperantoService,\r\n    private apiService: ApiService,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.init();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // sentence type переводчик\r\n  sentenceTypeTranslation(sentenceType): string {\r\n    switch (sentenceType) {\r\n      case 'affirmative':\r\n        return 'утвердительное';\r\n        break;\r\n      case 'interrogative':\r\n        return 'вопросительное';\r\n        break;\r\n      case 'negative':\r\n        return 'отрицательное';\r\n        break;\r\n    }\r\n  }\r\n\r\n  // Прибавления окончания s к английским словам\r\n  wordWith_s(word: string): string {\r\n    // tslint:disable-next-line:variable-name\r\n    let wordWith_S: string;\r\n    const lastLetter = word[word.length - 1].toLowerCase();\r\n    const preLastLetter = word[word.length - 2].toLowerCase();\r\n    // если кончается на s x z o ss sh ch то окончанием становится es\r\n    if ((lastLetter === 's')\r\n      || ((lastLetter) === 'x')\r\n      || ((lastLetter) === 'z')\r\n      || ((preLastLetter + lastLetter) === 'ss')\r\n      || ((preLastLetter + lastLetter) === 'sh')\r\n      || ((preLastLetter + lastLetter) === 'ch')\r\n    ) {\r\n      // если кончается на о\r\n    } else if ((lastLetter) === 'o') {\r\n      // если на о и перед ней согласная\r\n      // tslint:disable-next-line:no-bitwise\r\n      if (~this.consonants.indexOf(preLastLetter)) {\r\n        wordWith_S = word + 'es';\r\n      }\r\n      // если на о и перед ней гласная\r\n      // tslint:disable-next-line:no-bitwise\r\n      if (~this.vowels.indexOf(preLastLetter)) {\r\n        wordWith_S = word + 's';\r\n      }\r\n    } else if (preLastLetter + lastLetter === 'th') {\r\n      wordWith_S = word + 's';\r\n    } else {\r\n      // если заканчивается на y\r\n      if (lastLetter === 'y') {\r\n        // если предпоследняя - гласная\r\n        // tslint:disable-next-line:no-bitwise\r\n        if (~this.consonants.indexOf(preLastLetter)) {\r\n          wordWith_S = word.substring(0, word.length - 1) + 'ies';\r\n        }\r\n        // если предпоследняя - согласная\r\n        // tslint:disable-next-line:no-bitwise\r\n        if (~this.vowels.indexOf(preLastLetter)) {\r\n          wordWith_S = word + 's';\r\n        }\r\n      } else {\r\n        // по умолчанию просто s\r\n        wordWith_S = word + 's';\r\n      }\r\n    }\r\n    return wordWith_S;\r\n  }\r\n\r\n  // Прибавления окончания d к английским глаголам (делаем прошедшее время глогала)\r\n  verbWith_d(verb: IWord): string {\r\n    // tslint:disable-next-line:variable-name\r\n    let verbWith_d: string;\r\n    let vowelNumber = 0;\r\n    let consonantNumber = 0;\r\n    const lastLetter = verb.english[verb.english.length - 1];\r\n    const preLastLetter = verb.english[verb.english.length - 2];\r\n    const verbArr = verb.english.toLowerCase().split('');\r\n\r\n    // подсчитываем кол-во букв. Если там одна гласная, то в конце удваиваем последнюю букву и добавляем окончание в итоге далее.\r\n    verbArr.forEach(letter => {\r\n      // tslint:disable-next-line:no-bitwise\r\n      if (~this.consonants.indexOf(letter)) {\r\n        consonantNumber++;\r\n      }\r\n      // tslint:disable-next-line:no-bitwise\r\n      if (~this.vowels.indexOf(letter)) {\r\n        vowelNumber++;\r\n      }\r\n    });\r\n\r\n    // если есть вторая форма глагола, т.е. он нестандартный - возвращаем ее\r\n    if (verb && verb.extra_data && verb.extra_data.englishSecondForm) {\r\n      verbWith_d = verb.extra_data.englishSecondForm;\r\n    } else {\r\n      // если кончается на e или ee - просто добавляется d\r\n      if ((verb.english[verb.english.length - 1] === 'e')\r\n        || (verb.english.substring(verb.english.length - 2, verb.english.length) === 'ee')) {\r\n        verbWith_d = verb.english + 'd';\r\n        // если последняя y и предпоследняя - согласная - меняется на ied\r\n        // tslint:disable-next-line:no-bitwise\r\n      } else if (lastLetter === 'y' && ~this.consonants.indexOf(preLastLetter)) {\r\n        verbWith_d = verb.english.substring(0, verb.english.length - 1) + 'ied';\r\n        // если оканчивается на ic - меняется на ick и добавляется ed\r\n      } else if (preLastLetter + lastLetter === 'ic') {\r\n        verbWith_d = verb.english.substring(0, verb.english.length - 2) + 'ick' + 'ed';\r\n        // если слово короткое, или в слове одна гласная, или предпоследняя буква - ударная гласная, то последнюю удваиваем и +ed.\r\n        // И если последняя не y (оно тоже согласная)\r\n        // tslint:disable-next-line:no-bitwise\r\n      } else if (~this.consonants.indexOf(lastLetter)\r\n        && (vowelNumber === 1)\r\n        // tslint:disable-next-line:no-bitwise\r\n        && ~this.vowels.indexOf(preLastLetter)\r\n        && lastLetter !== 'y'\r\n        && lastLetter !== 'x'\r\n        && lastLetter !== 'w'\r\n        && lastLetter !== preLastLetter) {\r\n        verbWith_d = verb.english + verb.english[verb.english.length - 1] + 'ed';\r\n        // во всех остальных случаях по умолчанию добавляем просто ed\r\n      } else {\r\n        verbWith_d = verb.english + 'ed';\r\n      }\r\n    }\r\n    return verbWith_d;\r\n  }\r\n\r\n  // Прибавления окончания ing к английским глаголам\r\n  wordWith_ing(word: IWord): string {\r\n    // tslint:disable-next-line:variable-name\r\n    let wordWith_ing: string;\r\n    const lastLetter = word.english[word.english.length - 1];\r\n    const preLastLetter = word.english[word.english.length - 2];\r\n    let vowelNumber = 0;\r\n    let consonantNumber = 0;\r\n    const wordLettersArr = word.english.toLowerCase().split('');\r\n\r\n    // подсчитываем кол-во букв. Если там одна гласная, то в конце удваиваем последнюю букву и добавляем окончание в итоге далее.\r\n    wordLettersArr.forEach(letter => {\r\n      // tslint:disable-next-line:no-bitwise\r\n      if (~this.consonants.indexOf(letter)) {\r\n        consonantNumber++;\r\n      }\r\n      // tslint:disable-next-line:no-bitwise\r\n      if (~this.vowels.indexOf(letter)) {\r\n        vowelNumber++;\r\n      }\r\n    });\r\n\r\n    // если слово - исключение и у него есть свое написание\r\n    if (word && word.extra_data && word.extra_data.englishWithIng) {\r\n      wordWith_ing = word.extra_data.englishWithIng;\r\n      // все остальные случаи\r\n    } else {\r\n\r\n      // -2. Если глагол заканчивается на сочетание букв «ic»,\r\n      // то при прибавлении -ing, суффикс -ic меняется на -ick.\r\n      if (preLastLetter.toLowerCase() === 'i' && lastLetter.toLowerCase() === 'c') {\r\n        wordWith_ing = word.english.slice(0, word.english.length - 2) + 'icking';\r\n      } else\r\n\r\n        // -1. Если глагол заканчивается на сочетание букв «ie»,\r\n        // то при прибавлении -ing суффикс -ie меняется на букву «y».\r\n      if (preLastLetter.toLowerCase() === 'i' && lastLetter.toLowerCase() === 'e') {\r\n        wordWith_ing = word.english.slice(0, word.english.length - 2) + 'ying';\r\n      } else\r\n\r\n        // 0. Если глагол оканчивается на ee, то просто + ing.\r\n      if (lastLetter.toLowerCase() === 'e' && preLastLetter.toLowerCase() === 'e') {\r\n        wordWith_ing = word.english + 'ing';\r\n      } else\r\n\r\n        // 1. Если глагол оканчивается на немую гласную букву е, то эта буква убирается.\r\n      if (lastLetter.toLowerCase() === 'e') {\r\n        wordWith_ing = word.english.slice(0, word.english.length - 1) + 'ing';\r\n      } else\r\n\r\n        // 2. Если глагол оканчивается на гласную букву y, то окончание ing добавляется после у.\r\n      if (lastLetter.toLowerCase() === 'y') {\r\n        wordWith_ing = word.english + 'ing';\r\n      } else\r\n\r\n        // 3. В случаях, когда глагол оканчивается на закрытый слог под ударением, то конечная согласная удваивается.\r\n      if (\r\n        (vowelNumber === 1)\r\n        // tslint:disable-next-line:no-bitwise\r\n        && (~this.vowels.indexOf(preLastLetter))\r\n        // tslint:disable-next-line:no-bitwise\r\n        && (~this.consonants.indexOf(lastLetter))\r\n        && !((lastLetter === 'w')\r\n        || ((lastLetter) === 'x'))) {\r\n        wordWith_ing = word.english + lastLetter + 'ing';\r\n      } else\r\n\r\n        // 4. В британском английском в словах, оканчивающихся на букву l,\r\n        // перед которой стоит короткий гласный звук, при добавлении окончания ing буква l удваивается.\r\n        // tslint:disable-next-line:no-bitwise\r\n      if (lastLetter === 'l' && ~this.vowels.indexOf(preLastLetter)) {\r\n        wordWith_ing = word.english + lastLetter + 'ing';\r\n      } else\r\n\r\n        // 5. Если глагол оканчивается на букву r в ударном слоге, то r также удваивается.\r\n        // tslint:disable-next-line:no-bitwise\r\n      if (lastLetter === 'r' && ~this.vowels.indexOf(preLastLetter)) {\r\n        wordWith_ing = word.english + lastLetter + 'ing';\r\n      } else {\r\n        wordWith_ing = word.english + 'ing';\r\n      }\r\n    }\r\n    return wordWith_ing;\r\n  }\r\n\r\n  // создание примера\r\n  createRandomSentence(): void {\r\n    this.randomSentence = {\r\n      Time: this.getRandomTime(),\r\n      SentenceType: this.getRandomSentenceType(),\r\n      Pronoun: this.getRandomPronoun(),\r\n      Verb: this.getRandomVerb(),\r\n      answer: ''\r\n    };\r\n    switch (this.randomSentence.Time) {\r\n      case 'Present Simple':\r\n        this.createPresentSimpleSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Past Simple':\r\n        this.createPastSimpleSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Future Simple':\r\n        this.createFutureSimpleSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Present Continues':\r\n        this.createPresentContinuesSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Past Continues':\r\n        this.createPastContinuesSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Future Continues':\r\n        this.createFutureContinuesSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Present Perfect':\r\n        this.createPresentPerfectSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Past Perfect':\r\n        this.createPastPerfectSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Future Perfect':\r\n        this.createFuturePerfectSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Present Perfect Continues':\r\n        this.createPresentPerfectContinuesSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Past Perfect Continues':\r\n        this.createPastPerfectContinuesSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n      case 'Future Perfect Continues':\r\n        this.createFuturePerfectContinuesSentence(this.randomSentence.SentenceType, this.randomSentence.Pronoun, this.randomSentence.Verb);\r\n        break;\r\n    }\r\n  }\r\n\r\n  // добавляется ли s в зависимости от местоимения (для do\\does etc)\r\n  hasSdependsOnPronoun(pronoun): any {\r\n    const pronounsWithS = ['he', 'she', 'it'];\r\n    return !!pronounsWithS.includes(pronoun.english.toLowerCase());\r\n  }\r\n\r\n  // корректный глагол to be в зависимости от местоимения и времени\r\n  makeCorrectToBe(time, pronoun): string {\r\n    const are = ['they', 'you', 'we'];\r\n    const is = ['he', 'she', 'it'];\r\n    const am = ['i'];\r\n    if (time === 'present') {\r\n      if (are.includes(pronoun.english.toLowerCase())) {\r\n        return 'are';\r\n      }\r\n      if (is.includes(pronoun.english.toLowerCase())) {\r\n        return 'is';\r\n      }\r\n      if (am.includes(pronoun.english.toLowerCase())) {\r\n        return 'am';\r\n      }\r\n    }\r\n    if (time === 'past') {\r\n      if (are.includes(pronoun.english.toLowerCase())) {\r\n        return 'were';\r\n      } else {\r\n        return 'was';\r\n      }\r\n    }\r\n  }\r\n\r\n  // корректный модальный глагол have в зависимости от местоимения\r\n  makeCorrectModalHave(pronoun): string {\r\n    const has = ['he', 'she', 'it'];\r\n    if (has.includes(pronoun.english.toLowerCase())) {\r\n      return 'has';\r\n    } else {\r\n      return 'have';\r\n    }\r\n  }\r\n\r\n  // Simple Sentences\r\n  // Present Simple\r\n  createPresentSimpleSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence =\r\n          this.hasSdependsOnPronoun(Pronoun)\r\n            ? `${Pronoun.english} ${this.wordWith_s(Verb)}`\r\n            : `${Pronoun.english} ${Verb.english}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = this.hasSdependsOnPronoun(Pronoun) ? `Does ${Pronoun.english} ${Verb.english}` : `Do ${Pronoun.english} ${Verb.english}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = this.hasSdependsOnPronoun(Pronoun) ? `${Pronoun.english} doesn't ${Verb.english}` : `${Pronoun.english} don't ${Verb.english}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Past Simple\r\n  createPastSimpleSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} ${this.verbWith_d(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `Did ${Pronoun.english} ${Verb.english}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} didn't ${Verb.english}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Future Simple\r\n  createFutureSimpleSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} will ${Verb.english}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `Will ${Pronoun.english} ${Verb.english}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} will not ${Verb.english}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Continues Sentences\r\n  // Present Continues\r\n  createPresentContinuesSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} ${this.makeCorrectToBe('present', Pronoun)} ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `${this.makeCorrectToBe('present', Pronoun)} ${Pronoun.english} ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} ${this.makeCorrectToBe('present', Pronoun)} not ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Past Continues\r\n  createPastContinuesSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} ${this.makeCorrectToBe('past', Pronoun)} ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `${this.makeCorrectToBe('past', Pronoun)} ${Pronoun.english} ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} ${this.makeCorrectToBe('past', Pronoun)} not ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Future Continues\r\n  createFutureContinuesSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} will be ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `Will ${Pronoun.english} be ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} will not be ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Perfect Sentences\r\n  // Present Perfect\r\n  createPresentPerfectSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    const isIrregularVerb = !!(Verb.extra_data && Verb.extra_data.englishThirdForm);\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} ${this.makeCorrectModalHave(Pronoun)} ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `${this.makeCorrectModalHave(Pronoun)} ${Pronoun.english} ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} ${this.makeCorrectModalHave(Pronoun)} not ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Past Perfect\r\n  createPastPerfectSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    const isIrregularVerb = !!(Verb.extra_data && Verb.extra_data.englishThirdForm);\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} had ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `Had ${Pronoun.english} ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} had not ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Future Perfect\r\n  createFuturePerfectSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    const isIrregularVerb = !!(Verb.extra_data && Verb.extra_data.englishThirdForm);\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} will have ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `Will ${Pronoun.english} have ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} will not have ${isIrregularVerb ? Verb.extra_data.englishThirdForm : this.verbWith_d(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Perfect Continues\r\n  // Present Perfect Continues\r\n  createPresentPerfectContinuesSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} ${this.makeCorrectModalHave(Pronoun)} been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `${this.makeCorrectModalHave(Pronoun)} ${Pronoun.english} been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} ${this.makeCorrectModalHave(Pronoun)} not been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Past Perfect Continues\r\n  createPastPerfectContinuesSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} had been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `Had ${Pronoun.english} been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} had not been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // Future Perfect Continues\r\n  createFuturePerfectContinuesSentence(SentenceType, Pronoun, Verb): void {\r\n    let sentence = '';\r\n    switch (SentenceType) {\r\n      case 'affirmative':\r\n        sentence = `${Pronoun.english} will have been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'interrogative':\r\n        sentence = `Will ${Pronoun.english} have been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n      case 'negative':\r\n        sentence = `${Pronoun.english} will not have been ${this.wordWith_ing(Verb)}`;\r\n        break;\r\n    }\r\n    this.randomSentence.answer = sentence;\r\n  }\r\n\r\n  // случайный глагол\r\n  getRandomVerb(): IWord {\r\n    let choosenVerb: IWord;\r\n    choosenVerb = this.verbs[Math.floor(Math.random() * this.verbs.length)];\r\n    return choosenVerb;\r\n  }\r\n\r\n  // случайное время\r\n  getRandomTime(): string {\r\n    let choosenTime: string;\r\n    choosenTime = this.times[Math.floor(Math.random() * this.times.length)];\r\n    return choosenTime;\r\n  }\r\n\r\n  // случайный тип предложения\r\n  getRandomSentenceType(): string {\r\n    let choosenSentenceType: string;\r\n    choosenSentenceType = this.sentenceType[Math.floor(Math.random() * this.sentenceType.length)];\r\n    return choosenSentenceType;\r\n  }\r\n\r\n  // случайное местоимение\r\n  getRandomPronoun(): IWord {\r\n    let choosenPronoun: IWord;\r\n    choosenPronoun = this.pronouns[Math.floor(Math.random() * this.pronouns.length)];\r\n    return choosenPronoun;\r\n  }\r\n\r\n  // инициализация конструктора, включает в себя загрузку слов (местоимения, глаголы)\r\n  init(): void {\r\n    const loadPronouns$: Observable<any> = this.esperantoService.getWordsByWordList('pronomoj');\r\n    const loadVerbs$: Observable<any> = this.esperantoService.getWordsByWordList('verbs');\r\n    const allWords$ = forkJoin([loadPronouns$, loadVerbs$]);\r\n    allWords$.subscribe((words: IWord[][]) => {\r\n      this.pronouns = words[0];\r\n      this.verbs = words[1];\r\n      this.createRandomSentence();\r\n    });\r\n  }\r\n\r\n  // следующее предложение\r\n  nextSentence(): void {\r\n    this.createRandomSentence();\r\n  }\r\n\r\n  showAnswer(): void {\r\n    if (this.isShowAnswer === true) {\r\n      this.isShowAnswer = false;\r\n      this.nextSentence();\r\n    } else {\r\n      this.isShowAnswer = true;\r\n    }\r\n  }\r\n\r\n  openSettings(): void {\r\n    const dialogRef = this.dialog.open(EscSettingsPopupComponent, {\r\n      panelClass: ['of-auto'],\r\n      data: {times: this.times, sentenceType: this.sentenceType, pronouns: this.pronouns, verbs: this.verbs}\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n      if (result) {\r\n        this.setGenerratorConfigs(result.config);\r\n        this.createRandomSentence();\r\n      }\r\n    });\r\n  }\r\n\r\n  setGenerratorConfigs(config): void {\r\n    this.times = config.times;\r\n    this.verbs = config.verbs;\r\n    this.sentenceType = config.sentenceType;\r\n    this.pronouns = config.pronouns;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","<div *ngIf=\"randomSentence\" fxLayout=\"column\" fxFlex fxLayoutAlign=\"center center\">\r\n\r\n  <div fxFlex fxLayoutAlign=\"center center\">\r\n    <h1>Конструктор предложений</h1>\r\n    <mat-icon class=\"h1-icon\" [matTooltip]=\"'Выбрать проверяемые времена, типы предложений, местоимения, глаголы и т.д.'\"\r\n              [matTooltipClass]=\"'toolTipClass'\" (click)=\"openSettings()\">settings</mat-icon>\r\n  </div>\r\n\r\n  <div *ngIf=\"randomSentence\" class=\"w-100\" fxLayout=\"row\" fxFlex fxLayoutAlign=\"center center\">\r\n    <div class=\"w-100 fs-5vw ow-anywhere lh-1\" fxLayout=\"column\" fxFlex>\r\n      <div>Местоимение</div>\r\n      <div>Время</div>\r\n      <div>Глагол</div>\r\n      <div>Тип</div>\r\n      <div>Ответ:</div>\r\n    </div>\r\n    <div class=\"w-100 fs-5vw ow-anywhere lh-1 h-100\" fxLayout=\"column\" fxFlex fxLayoutAlign=\"start\">\r\n      <div>{{randomSentence.Pronoun.russian}}</div>\r\n      <div>{{randomSentence.Time}}</div>\r\n      <div>{{randomSentence.Verb.russian}}</div>\r\n      <div>{{sentenceTypeTranslation(randomSentence.SentenceType)}}</div>\r\n      <div *ngIf=\"isShowAnswer\">{{randomSentence.answer.toLowerCase()}}</div>\r\n    </div>\r\n  </div>\r\n\r\n  <div>\r\n    <div fxLayoutAlign=\"center center\">\r\n      <button color=\"primary\" (click)=\"showAnswer()\"   mat-button=\"\">Ответ</button>\r\n      <button color=\"primary\" (click)=\"nextSentence()\" mat-button=\"\">Следующее</button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-task-answer-popup',\r\n  templateUrl: './task-answer-popup.component.html',\r\n  styleUrls: ['./task-answer-popup.component.css']\r\n})\r\nexport class TaskAnswerPopupComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<TaskAnswerPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"data.task.question\">\r\n  <div>\r\n    <h2 class=\"custom-h-margin\">\r\n      Вопрос:\r\n    </h2>\r\n  </div>\r\n  <div>\r\n    {{data.task.question}}\r\n  </div>\r\n  <hr>\r\n</div>\r\n\r\n<div *ngIf=\"data.task.description\">\r\n  <div>\r\n    <h2 class=\"custom-h-margin\">\r\n      Описание:\r\n    </h2>\r\n  </div>\r\n  <div>\r\n    {{data.task.description}}\r\n  </div>\r\n  <hr>\r\n</div>\r\n\r\n<div *ngIf=\"data.task.answer.text.length > 0\">\r\n  <div>\r\n    <h2 class=\"custom-h-margin\">\r\n      Ответ:\r\n    </h2>\r\n  </div>\r\n  <div *ngFor=\"let text of data.task.answer.text\" class=\"paragraph\">\r\n    {{text}}\r\n  </div>\r\n  <hr>\r\n</div>\r\n\r\n<div *ngIf=\"data.task.answer.code.length > 0\">\r\n  <div>\r\n    <h2 class=\"custom-h-margin\">\r\n      Код:\r\n    </h2>\r\n  </div>\r\n  <pre *ngFor=\"let code of data.task.answer.code; let idx = index\" class=\"paragraph\">\r\n    <b>Код: {{idx}}</b>\r\n    <code data-language=\"javascript\">\r\n      {{code}}\r\n    </code>\r\n  </pre>\r\n  <hr>\r\n</div>\r\n\r\n<div *ngIf=\"data.task.answer.link && data.task.answer.link.length > 0\">\r\n  <div>\r\n    <h2 class=\"custom-h-margin\">\r\n      Ссылки:\r\n    </h2>\r\n  </div>\r\n  <div *ngFor=\"let link of data.task.answer.link\">\r\n    <a target=\"_blank\" href=\"{{link}}\">{{link}}</a>\r\n  </div>\r\n  <hr>\r\n</div>\r\n\r\n<div mat-dialog-actions>\r\n  <button mat-raised-button color=\"primary\" (click)=\"onNoClick()\">Закрыть</button>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {ApiService} from '../api.service';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogService {\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * Получить необходимую часть\r\n   * @param quest\r\n   * @param part\r\n   */\r\n  // getQuestPart(quest: string, part: number = 1): Observable<any> {\r\n  //   const params = new HttpParams().set('quest', quest).set('part', part.toString());\r\n  //   return this.httpClient.get(`${this.apiService.MAIN_SERVER}blog/bookQuest`, {params});\r\n  // }\r\n  getQuestPart(quest: string, part: number = 1): Observable<any> {\r\n    if (quest === 'thestainlesssteelrat') {\r\n      return this.httpClient.get<any[]>(`./assets/collections/thestainlesssteelrat.json`).pipe(\r\n        map((res) => {\r\n          const partWeNeed = res.filter(record => +record.id === +part);\r\n          return partWeNeed;\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Получить список всех квестов\r\n   */\r\n  // getBookQuestList(): Observable<any> {\r\n  //   return this.httpClient.get(`${this.apiService.MAIN_SERVER}blog/bookQuestList`);\r\n  // }\r\n  getBookQuestList(): Observable<any> {\r\n    return this.httpClient.get(`./assets/collections/bookquestlist.json`);\r\n  }\r\n\r\n}\r\n","import {Component, OnDestroy, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {EsperantoService} from '../../../core/services/esperanto/esperanto.service';\r\nimport {IWord} from '../../models/esperanto/word.interface';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {ApiService} from '../../../core/services/api.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AddWordComponent} from '../popup/add-word/add-word.component';\r\n\r\n@Component({\r\n  selector: 'app-word-list',\r\n  templateUrl: './word-list.component.html',\r\n  styleUrls: ['./word-list.component.scss']\r\n})\r\nexport class WordListComponent implements OnDestroy {\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n  listWord$: Observable<IWord[]>;\r\n\r\n  displayedColumns: string[] = ['esperanto', 'english', 'russian'];\r\n  dataSource: MatTableDataSource<IWord>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private esperantoService: EsperantoService,\r\n              public apiService: ApiService,\r\n              public dialog: MatDialog) {\r\n    this.activatedRoute.params.pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(params => {\r\n      this.loadListWords(params?.wordList);\r\n    });\r\n    this.apiService.isAuth.subscribe(isAuth => {\r\n      if (isAuth) {\r\n        this.displayedColumns.push('actions');\r\n      } else {\r\n        this.displayedColumns = this.displayedColumns.filter(col => col !== 'actions');\r\n      }\r\n    });\r\n  }\r\n\r\n  loadListWords(list: string): void {\r\n    if (!list) {\r\n      this.esperantoService.getWords().pipe(\r\n        takeUntil(this.unsubscribe$)\r\n      ).subscribe(words => {\r\n        this.dataSource = new MatTableDataSource(words);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      });\r\n    }\r\n    this.esperantoService.getWordsByWordList(list).pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe((words: IWord[]) => {\r\n      this.dataSource = new MatTableDataSource(words);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event): void {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  addWord(): void {\r\n    const dialogRef = this.dialog.open(AddWordComponent, {\r\n      panelClass: ['of-auto'],\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n      if (result.item) {\r\n        // TODO в будущем не перезагружать и работать со списком, который уже вызван\r\n        this.loadListWords(result.item.params.word_type);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateWord(word): void {\r\n    const dialogRef = this.dialog.open(AddWordComponent, {\r\n      panelClass: ['of-auto'],\r\n      data: {word}\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n      if (result.item) {\r\n        // TODO в будущем не перезагружать и работать со списком, который уже вызван\r\n        this.loadListWords(result.item.params.word_type);\r\n      }\r\n    });\r\n  }\r\n\r\n  delWord(word: IWord): void {\r\n    const areYouSure = confirm('Точно удалить слово?');\r\n    if (areYouSure) {\r\n      this.esperantoService.delWord(word).pipe(\r\n        takeUntil(this.unsubscribe$)\r\n      ).subscribe(res => {\r\n        if (res.item) {\r\n          // TODO в будущем не перезагружать и работать со списком, который уже вызван\r\n          // this.loadListWords(word.word_type);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<div>\r\n  <div *ngFor=\"let word of listWord$ | async\">\r\n    {{word.esperanto}} / {{word.english}} / {{word.russian}}\r\n  </div>\r\n\r\n  <div *ngIf=\"apiService.isAuth | async\">\r\n    <button fxFlex fxLayoutAlign=\"center\" mat-button (click)=\"addWord()\" color=\"primary\">add new word</button>\r\n  </div>\r\n\r\n  <mat-form-field>\r\n    <mat-label>Filter</mat-label>\r\n    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Найти слово\" #input>\r\n  </mat-form-field>\r\n\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <!-- Esperanto Column -->\r\n      <ng-container matColumnDef=\"esperanto\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Esperanto</th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.esperanto}}</td>\r\n      </ng-container>\r\n\r\n      <!-- English Column -->\r\n      <ng-container matColumnDef=\"english\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> English</th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.english}} </td>\r\n      </ng-container>\r\n\r\n      <!-- Russian Column -->\r\n      <ng-container matColumnDef=\"russian\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Russian</th>\r\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"'black'\"> {{row.russian}} </td>\r\n      </ng-container>\r\n\r\n      <!-- actions Column -->\r\n      <ng-container *ngIf=\"apiService.isAuth | async\" matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> actions</th>\r\n        <td mat-cell *matCellDef=\"let row\" [style.color]=\"'black'\">\r\n          <div>\r\n            <button mat-raised-button color=\"primary\"><em (click)=\"updateWord(row)\" class=\"material-icons-outlined\">edit</em></button>\r\n            <button class=\"ml-16\" mat-raised-button color=\"primary\"><em (click)=\"delWord(row)\" class=\"material-icons-outlined\">delete</em></button>\r\n          </div>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n      <!-- Row shown when there is no matching data. -->\r\n      <tr class=\"mat-row\" *matNoDataRow>\r\n        <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n      </tr>\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n  </div>\r\n\r\n</div>\r\n","import {NavListComponent} from './components/nav-list/nav-list.component';\r\nimport {HeaderComponent} from './components/header/header.component';\r\nimport {MaterialModule} from './material.module';\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {WordListComponent} from './components/word-list/word-list.component';\r\nimport {WordCardComponent} from './components/word-card/word-card.component';\r\nimport {WordCardHelpComponent} from './components/word-card/popup/word-card-help/word-card-help.component';\r\nimport {WordCardSettingsComponent} from './components/word-card/popup/word-card-settings/word-card-settings.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {AuthComponent} from './components/auth/auth.component';\r\nimport {AddListComponent} from './components/popup/add-list/add-list.component';\r\nimport {AddWordComponent} from './components/popup/add-word/add-word.component';\r\nimport {WordListsComponent} from './components/word-lists/word-lists.component';\r\nimport {BookQuestComponent} from './components/book-quest/book-quest.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    NavListComponent,\r\n    WordListComponent,\r\n    WordCardComponent,\r\n    WordCardHelpComponent,\r\n    WordCardSettingsComponent,\r\n    AuthComponent,\r\n    AddListComponent,\r\n    AddWordComponent,\r\n    WordListsComponent,\r\n    BookQuestComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    RouterModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [\r\n    MaterialModule,\r\n    HeaderComponent,\r\n    NavListComponent,\r\n    FlexLayoutModule,\r\n    WordListComponent,\r\n    WordCardComponent,\r\n    ReactiveFormsModule,\r\n    WordListsComponent,\r\n    BookQuestComponent\r\n  ],\r\n  entryComponents: [WordCardHelpComponent, WordCardSettingsComponent, AuthComponent, AddListComponent, AddWordComponent]\r\n})\r\nexport class SharedModule {\r\n}\r\n","import {SocratesRoutingModule} from './socrates-routing.module';\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    SocratesRoutingModule\r\n  ]\r\n})\r\nexport class SocratesModule {\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {BlogService} from '../../../../core/services/blog/blog.service';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {Subject} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit, OnDestroy {\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n  public bookQuestList = [];\r\n\r\n  constructor(private blogService: BlogService,\r\n              private router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.blogService.getBookQuestList().pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(list => {\r\n      this.bookQuestList = list;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  openBookQuest(bookQuest: any): void {\r\n    this.router.navigate(['/', 'blog', 'bookquest', bookQuest, '1']);\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <mat-card *ngFor=\"let bookQuest of bookQuestList\" class=\"esperanto-main-card\">\r\n    <mat-card-header class=\"w-100\">\r\n      <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\r\n        <h1 [routerLink]=\"['/', 'blog', 'bookquest', bookQuest.collection_caption, '1']\"\r\n            [matTooltip]=\"'Книга-квест ' + bookQuest.title + '. Аавтор: ' + bookQuest.author\" [matTooltipClass]=\"'toolTipClass'\"\r\n        >{{bookQuest.title}}</h1>\r\n      </mat-card-title>\r\n      <mat-card-subtitle>{{bookQuest.item_type}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div class=\"img-container\" [routerLink]=\"['/', 'blog', 'bookquest', bookQuest.collection_caption, '1']\">\r\n      {{bookQuest.cover}}\r\n    </div>\r\n    <mat-card-content [routerLink]=\"['/', 'blog', 'bookquest', bookQuest.collection_caption, '1']\">\r\n      <p>\r\n        {{bookQuest.author}}\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"openBookQuest(bookQuest.collection_caption)\"\r\n              [matTooltip]=\"'Начать квест'\" [matTooltipClass]=\"'toolTipClass'\"\r\n      >\r\n        <i class=\"material-icons-outlined\">remove_red_eye</i>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n}\r\n","<mat-sidenav-container>\r\n  <mat-sidenav #sidenav>\r\n    <app-nav-list></app-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <app-header (sidenav)='sidenav.toggle()'></app-header>\r\n    <main>\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import {Component, ElementRef, Inject, OnInit, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {Observable} from 'rxjs';\r\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport {IListWord} from '../../../../models/esperanto/word_list.interface';\r\nimport {EsperantoService} from '../../../../../core/services/esperanto/esperanto.service';\r\n\r\n@Component({\r\n  selector: 'app-word-card-settings',\r\n  templateUrl: './word-card-settings.component.html',\r\n  styleUrls: ['./word-card-settings.component.scss']\r\n})\r\nexport class WordCardSettingsComponent implements OnInit {\r\n  wordCardSettingsForm: FormGroup;\r\n  selectable = true;\r\n  removable = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  listCtrl = new FormControl();\r\n  filteredLists: Observable<IListWord[]>;\r\n  allWordLists: IListWord[] = [];\r\n  activeWordLists: IListWord[] = [];\r\n  @ViewChild('listInput') listInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<WordCardSettingsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public fb: FormBuilder,\r\n    private esperantoService: EsperantoService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.filteredLists = this.listCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      map((list: string | null) => list ? this._filter(list) : this.listsWithoutSelected())\r\n    );\r\n\r\n    this.createWordCardSettingsForm();\r\n\r\n    // патчим настройки по умолчанию\r\n    this.formPatcher(this.wordCardSettingsForm, this.data.settings);\r\n\r\n    // получение списка всех списков слов\r\n    this.esperantoService.getWordLists().subscribe(wordList => {\r\n      this.allWordLists = wordList;\r\n\r\n      this.data.activeWordLists.forEach(activeWordList => {\r\n        const activeList = this.allWordLists.filter((list: IListWord) => list.caption.esperanto.toLowerCase() === activeWordList.toLowerCase())[0];\r\n        if (activeList) {\r\n          this.activeWordLists.push(activeList);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    const listToAdd = this.allWordLists.filter(list => list.caption.russian === value)[0];\r\n    if (listToAdd) {\r\n      this.activeWordLists.push(listToAdd);\r\n    }\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n    this.listCtrl.setValue(null);\r\n  }\r\n\r\n  remove(title: string): void {\r\n    this.activeWordLists = this.activeWordLists.filter(list => list.title !== title);\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    const listToAdd = this.allWordLists.filter(list => list.caption.russian === event.option.viewValue)[0];\r\n    this.activeWordLists.push(listToAdd);\r\n    this.listInput.nativeElement.value = '';\r\n    this.listCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(title: string): IListWord[] {\r\n    const filterValue = title.toLowerCase();\r\n    const unselectedLists = this.listsWithoutSelected();\r\n    return unselectedLists.filter(list => list.caption.russian.toLowerCase().indexOf(filterValue) === 0);\r\n  }\r\n\r\n  private listsWithoutSelected(): IListWord[] {\r\n    let unSelectedLists = this.allWordLists;\r\n    this.activeWordLists.forEach(list => {\r\n      const filteredLists = unSelectedLists.filter(list2 => list2.caption.russian.toLowerCase() !== list.caption.russian.toLowerCase());\r\n      unSelectedLists = filteredLists;\r\n    });\r\n    return unSelectedLists;\r\n  }\r\n\r\n  createWordCardSettingsForm(): void {\r\n    // TODO работа с голосом\r\n    this.wordCardSettingsForm = this.fb.group({\r\n      isRepeat: [false, Validators.required],\r\n      // playbackSpeed: ['1', Validators.required],\r\n      startLang: ['', Validators.required],\r\n      finishLang: ['', Validators.required],\r\n      isAuto: [false, Validators.required],\r\n      timer: [0, Validators.required]\r\n      // voicePitch: ['1', Validators.required],\r\n      // voiceType: ['UK English Male', Validators.required],\r\n    });\r\n  }\r\n\r\n  formPatcher(form, data): void {\r\n    form.patchValue({\r\n      ...data\r\n    });\r\n  }\r\n\r\n  closePopup(): void {\r\n    this.dialogRef.close({settings: this.wordCardSettingsForm.value, wordLists: this.activeWordLists});\r\n  }\r\n\r\n}\r\n","<table>\r\n  <tr>\r\n    <td colspan=\"5\" [formGroup]=\"wordCardSettingsForm\">\r\n      <div>\r\n        <div>\r\n          <mat-form-field class=\"w-100\">\r\n            <mat-label>Favorite Fruits</mat-label>\r\n            <mat-chip-list #chipList aria-label=\"Fruit selection\">\r\n              <mat-chip\r\n                *ngFor=\"let activeList of activeWordLists\"\r\n                [selectable]=\"selectable\"\r\n                [removable]=\"removable\"\r\n                (removed)=\"remove(activeList.title)\">\r\n                {{activeList.caption.russian}}\r\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n              </mat-chip>\r\n              <input\r\n                placeholder=\"New list...\"\r\n                #listInput\r\n                [formControl]=\"listCtrl\"\r\n                [matAutocomplete]=\"auto\"\r\n                [matChipInputFor]=\"chipList\"\r\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n                (matChipInputTokenEnd)=\"add($event)\">\r\n            </mat-chip-list>\r\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n              <mat-option *ngFor=\"let list of filteredLists | async\" [value]=\"list.caption.russian\">\r\n                {{list.caption.russian}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"mb-16\">\r\n          <mat-checkbox color=\"primary\" formControlName=\"isRepeat\" class=\"fw-600\">Повторять слова</mat-checkbox>\r\n        </div>\r\n<!--         TODO работа с голосом-->\r\n<!--        <div class=\"mb-16\">-->\r\n<!--          <p class=\"m-0 fw-600\">Скорость воспроизведения:</p>-->\r\n<!--          <mat-radio-group formControlName=\"playbackSpeed\" aria-label=\"Скорость воспроизведения:\" color=\"primary\">-->\r\n<!--            <mat-radio-button class=\"mr-32\" value=\"0.5\">0.5</mat-radio-button>-->\r\n<!--            <mat-radio-button class=\"mr-32\" value=\"1\">1</mat-radio-button>-->\r\n<!--            <mat-radio-button value=\"1.5\">1.5</mat-radio-button>-->\r\n<!--          </mat-radio-group>-->\r\n<!--        </div>-->\r\n        <div class=\"mb-16\">\r\n          <p class=\"m-0 fw-600\">Начальный язык:</p>\r\n          <mat-radio-group formControlName=\"startLang\" aria-label=\"Начальный язык: \" color=\"primary\">\r\n            <mat-radio-button class=\"mr-32\" value=\"english\">english</mat-radio-button>\r\n            <mat-radio-button class=\"mr-32\" value=\"russian\">русский</mat-radio-button>\r\n            <mat-radio-button value=\"esperanto\">esperanto</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"mb-16\">\r\n          <p class=\"m-0 fw-600\">Конечный язык:</p>\r\n          <mat-radio-group formControlName=\"finishLang\" aria-label=\"Конечный язык: \" color=\"primary\">\r\n            <mat-radio-button class=\"mr-32\" value=\"english\">english</mat-radio-button>\r\n            <mat-radio-button class=\"mr-32\" value=\"russian\">русский</mat-radio-button>\r\n            <mat-radio-button value=\"esperanto\">esperanto</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n        <div class=\"mb-16\">\r\n          <mat-checkbox color=\"primary\" formControlName=\"isAuto\" class=\"fw-600 mr-32\">Таймер</mat-checkbox>\r\n          <mat-form-field>\r\n            <mat-label>Milliseconds</mat-label>\r\n            <input type=\"number\" formControlName=\"timer\" matInput placeholder=\"Milliseconds\">\r\n          </mat-form-field>\r\n        </div>\r\n<!--        <div class=\"mb-16\">-->\r\n<!--          <p class=\"m-0 fw-600\">Высота голоса:</p>-->\r\n<!--          <mat-radio-group formControlName=\"voicePitch\" aria-label=\"Высота голоса: \" color=\"primary\">-->\r\n<!--            <mat-radio-button class=\"mr-32\" value=\"0.5\">0.5</mat-radio-button>-->\r\n<!--            <mat-radio-button class=\"mr-32\" value=\"1\">1</mat-radio-button>-->\r\n<!--            <mat-radio-button value=\"1.5\">1.5</mat-radio-button>-->\r\n<!--          </mat-radio-group>-->\r\n<!--        </div>-->\r\n<!--        <div class=\"mb-16\">-->\r\n<!--          <p class=\"m-0 fw-600\">Голос:</p>-->\r\n<!--          <mat-radio-group formControlName=\"voiceType\" aria-label=\"Голос: \" color=\"primary\">-->\r\n<!--            <mat-radio-button class=\"d-b\" value=\"UK English Male\">UK English Male</mat-radio-button>-->\r\n<!--            <mat-radio-button class=\"d-b\" value=\"UK English Female\">UK English Female</mat-radio-button>-->\r\n<!--            <mat-radio-button class=\"d-b\" value=\"US English Male\">US English Male</mat-radio-button>-->\r\n<!--            <mat-radio-button class=\"d-b\" value=\"US English Female\">US English Female</mat-radio-button>-->\r\n<!--          </mat-radio-group>-->\r\n<!--        </div>-->\r\n      </div>\r\n    </td>\r\n  </tr>\r\n  <tr>\r\n    <button color=\"primary\" (click)=\"closePopup()\" mat-button=\"\">Ok</button>\r\n  </tr>\r\n</table>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthComponent} from '../auth/auth.component';\r\nimport {ApiService} from '../../../core/services/api.service';\r\nimport {OverlayContainer} from '@angular/cdk/overlay';\r\nimport {MatDialog} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-nav-list',\r\n  templateUrl: './nav-list.component.html',\r\n  styleUrls: ['./nav-list.component.scss']\r\n})\r\nexport class NavListComponent implements OnInit {\r\n\r\n  constructor(\r\n    public apiService: ApiService,\r\n    public overlayContainer: OverlayContainer,\r\n    public dialog: MatDialog\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openAuth(): void {\r\n    const dialogRef = this.dialog.open(AuthComponent, {\r\n      panelClass: [''],\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ul class=\"nav-list\">\r\n  <li *ngIf=\"(apiService.isAuth | async) === true\" [routerLink]=\"['']\">\r\n    <mat-icon>face</mat-icon><a>Профиль</a>\r\n  </li>\r\n  <li [routerLink]=\"['']\">\r\n    <mat-icon>home</mat-icon><a>Главная</a>\r\n  </li>\r\n  <li [routerLink]=\"['esperanto']\">\r\n    <mat-icon>language</mat-icon><a>Эсперанто</a>\r\n  </li>\r\n  <li [routerLink]=\"['english']\">\r\n    <mat-icon>chrome_reader_mode</mat-icon><a>Английский</a>\r\n  </li>\r\n  <li [routerLink]=\"['blog']\">\r\n    <mat-icon>fact_check</mat-icon><a>Блог</a>\r\n  </li>\r\n  <li [routerLink]=\"['socrates']\">\r\n    <mat-icon>psychology</mat-icon><a>Socrates</a>\r\n  </li>\r\n  <li *ngIf=\"(apiService.isAuth | async) === true\" (click)=\"apiService.logout()\">\r\n    <mat-icon>exit_to_app</mat-icon><a>Выйти</a>\r\n  </li>\r\n<!--  <li *ngIf=\"(apiService.isAuth | async) === false\" (click)=\"openAuth()\">-->\r\n<!--    <mat-icon>login</mat-icon><a >Войти</a>-->\r\n<!--  </li>-->\r\n  <li *ngIf=\"false\" (click)=\"openAuth()\">\r\n    <mat-icon>login</mat-icon><a >Войти</a>\r\n  </li>\r\n</ul>\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<app-word-lists></app-word-lists>\r\n","import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {EsperantoService} from '../../../../core/services/esperanto/esperanto.service';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-add-list',\r\n  templateUrl: './add-list.component.html',\r\n  styleUrls: ['./add-list.component.scss']\r\n})\r\nexport class AddListComponent implements OnInit, OnDestroy {\r\n  wordListForm: FormGroup;\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<AddListComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private esperantoService: EsperantoService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createWordListForm();\r\n    if (this.data && this.data.wordList) {\r\n      this.formPatcher(this.wordListForm, this.data.wordList);\r\n    }\r\n  }\r\n\r\n  createWordListForm(): void {\r\n    this.wordListForm = this.fb.group({\r\n      title: ['', Validators.required],\r\n      collection_caption: ['', Validators.required],\r\n      cover: ['', Validators.required],\r\n      level: ['', Validators.required],\r\n      caption: this.fb.group({\r\n        esperanto: ['', Validators.required],\r\n        english: ['', Validators.required],\r\n        russian: ['', Validators.required],\r\n      })\r\n    });\r\n  }\r\n\r\n  addList(): void {\r\n    this.esperantoService.addWordList(this.wordListForm.value).pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(res => {\r\n      if (!res.error) {\r\n        this.dialogRef.close(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateList(wordListId): void {\r\n    this.esperantoService.updateWordList({_id: wordListId, ...this.wordListForm.value}).pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(res => {\r\n      if (!res.error) {\r\n        this.dialogRef.close(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  formPatcher(form, data): void {\r\n    form.patchValue({\r\n      ...data\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","<div>\r\n  <form fxLayout=\"column\" fxFlex fxLayoutAlign=\"center center\" [formGroup]=\"wordListForm\">\r\n    <mat-form-field>\r\n      <mat-label>title</mat-label>\r\n      <input matInput formControlName=\"title\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>collection_caption</mat-label>\r\n      <input matInput formControlName=\"collection_caption\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>cover</mat-label>\r\n      <input matInput formControlName=\"cover\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>level</mat-label>\r\n      <input matInput formControlName=\"level\">\r\n    </mat-form-field>\r\n\r\n    <div fxLayout=\"column\" fxFlex fxLayoutAlign=\"center center\" formGroupName=\"caption\">\r\n      <mat-form-field>\r\n        <mat-label>esperanto</mat-label>\r\n        <input matInput formControlName=\"esperanto\">\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>english</mat-label>\r\n        <input matInput formControlName=\"english\">\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <mat-label>russian</mat-label>\r\n        <input matInput formControlName=\"russian\">\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <button *ngIf=\"!data.wordList\" mat-raised-button color=\"primary\" (click)=\"addList()\">add</button>\r\n    <button *ngIf=\"data && data.wordList && data.wordList._id\" mat-raised-button color=\"primary\" (click)=\"updateList(this.data.wordList._id)\">update</button>\r\n  </form>\r\n</div>\r\n","import {BlogRoutingModule} from './blog-routing.module';\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {IndexComponent} from './pages/index/index.component';\r\nimport {SharedModule} from '../../shared/shared.module';\r\nimport {BlogService} from '../../core/services/blog/blog.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [IndexComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BlogRoutingModule,\r\n    SharedModule\r\n  ],\r\n  providers: [BlogService]\r\n})\r\nexport class BlogModule {\r\n}\r\n","import {IWord} from '../../../shared/models/esperanto/word.interface';\r\nimport {Observable, of, Subject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Injectable, OnDestroy} from '@angular/core';\r\nimport {IListWord} from '../../../shared/models/esperanto/word_list.interface';\r\nimport {ApiService} from '../api.service';\r\nimport {filter, map, switchMap, tap} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class EsperantoService implements OnDestroy {\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private apiService: ApiService\r\n  ) {\r\n  }\r\n\r\n  /**\r\n   * get all words\r\n   */\r\n  // getWords(): Observable<IWord[]> {\r\n  //   return this.httpClient.get<IWord[]>(`${this.apiService.MAIN_SERVER}esperanto/allWords`);\r\n  // }\r\n  getWords(): Observable<IWord[]> {\r\n    return this.httpClient.get<IWord[]>(`./assets/collections/wordmodels.json`);\r\n  }\r\n\r\n  /**\r\n   * get all word lists\r\n   */\r\n  // getWordLists(): Observable<IListWord[]> {\r\n  //   return this.httpClient.get<IListWord[]>(`${this.apiService.MAIN_SERVER}esperanto/wordLists`);\r\n  // }\r\n  getWordLists(): Observable<IListWord[]> {\r\n    return this.httpClient.get<IListWord[]>(`./assets/collections/wordlistmodels.json`);\r\n  }\r\n\r\n  /**\r\n   * get all words from word list\r\n   * @param wordList list we need\r\n   */\r\n  // getWordsByWordList(wordList): Observable<IWord[]> {\r\n  //   const params = {wordList};\r\n  //   return this.httpClient.get<IWord[]>(`${this.apiService.MAIN_SERVER}esperanto/wordList`, {params});\r\n  // }\r\n  getWordsByWordList(wordList): Observable<IWord[]> {\r\n    return this.httpClient.get<IWord[]>(`./assets/collections/wordmodels.json`)\r\n      .pipe(\r\n        map((res) => {\r\n          let wordsByWordList = [];\r\n          if (wordList) {\r\n            wordsByWordList = res.filter(word => word.word_type === wordList || word.word_type.includes(wordList));\r\n          } else {\r\n            wordsByWordList = res;\r\n          }\r\n          return wordsByWordList;\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Добавление нового списка слов с проверкой авторизации\r\n   * @param wordList название списка\r\n   */\r\n  addWordList(wordList): Observable<any> {\r\n    const params = wordList;\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return this.apiService.checkToken().pipe(\r\n        switchMap((isAuth): Observable<any> => {\r\n          if (isAuth.error) {\r\n            return of(false);\r\n          } else if (isAuth.token && isAuth.decoded) {\r\n            return of(true);\r\n          }\r\n        }),\r\n        switchMap(auth => {\r\n          if (auth) {\r\n            return this.httpClient.post(`${this.apiService.MAIN_SERVER}esperanto/wordList`, {params});\r\n          } else {\r\n            return of({message: 'Вы не можете совершить эту операцию!'});\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Удаление списка слов с проверкой авторизации\r\n   * @param wordList название списка\r\n   */\r\n  delWordList(wordList): Observable<any> {\r\n    const params = wordList._id;\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return this.apiService.checkToken().pipe(\r\n        switchMap((isAuth): Observable<any> => {\r\n          if (isAuth.error) {\r\n            return of(false);\r\n          } else if (isAuth.token && isAuth.decoded) {\r\n            return of(true);\r\n          }\r\n        }),\r\n        switchMap(auth => {\r\n          if (auth) {\r\n            return this.httpClient.delete(`${this.apiService.MAIN_SERVER}esperanto/wordList`, {params});\r\n          } else {\r\n            return of({message: 'Вы не можете совершить эту операцию!'});\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Редактирование списка слов с проверкой авторизации\r\n   * @param wordList название списка\r\n   */\r\n  updateWordList(wordList): Observable<any> {\r\n    const params = wordList;\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return this.apiService.checkToken().pipe(\r\n        switchMap((isAuth): Observable<any> => {\r\n          if (isAuth.error) {\r\n            return of(false);\r\n          } else if (isAuth.token && isAuth.decoded) {\r\n            return of(true);\r\n          }\r\n        }),\r\n        switchMap(auth => {\r\n          if (auth) {\r\n            return this.httpClient.put(`${this.apiService.MAIN_SERVER}esperanto/wordList`, {params});\r\n          } else {\r\n            return of({message: 'Вы не можете совершить эту операцию!'});\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Добавление нового слова с проверкой авторизации\r\n   * @param word слово\r\n   */\r\n  addWord(word): Observable<any> {\r\n    const params = word;\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return this.apiService.checkToken().pipe(\r\n        switchMap((isAuth): Observable<any> => {\r\n          if (isAuth.error) {\r\n            return of(false);\r\n          } else if (isAuth.token && isAuth.decoded) {\r\n            return of(true);\r\n          }\r\n        }),\r\n        switchMap(auth => {\r\n          if (auth) {\r\n            return this.httpClient.post(`${this.apiService.MAIN_SERVER}esperanto/word`, {params});\r\n          } else {\r\n            return of({message: 'Вы не можете совершить эту операцию!'});\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Удаление слова с проверкой авторизации\r\n   * @param word название списка\r\n   */\r\n  delWord(word): Observable<any> {\r\n    const params = word._id;\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return this.apiService.checkToken().pipe(\r\n        switchMap((isAuth): Observable<any> => {\r\n          if (isAuth.error) {\r\n            return of(false);\r\n          } else if (isAuth.token && isAuth.decoded) {\r\n            return of(true);\r\n          }\r\n        }),\r\n        switchMap(auth => {\r\n          if (auth) {\r\n            return this.httpClient.delete(`${this.apiService.MAIN_SERVER}esperanto/word`, {params});\r\n          } else {\r\n            return of({message: 'Вы не можете совершить эту операцию!'});\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Редактирование слова с проверкой авторизации\r\n   * @param word название списка\r\n   */\r\n  updateWord(word): Observable<any> {\r\n    const params = word;\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      return this.apiService.checkToken().pipe(\r\n        switchMap((isAuth): Observable<any> => {\r\n          if (isAuth.error) {\r\n            return of(false);\r\n          } else if (isAuth.token && isAuth.decoded) {\r\n            return of(true);\r\n          }\r\n        }),\r\n        switchMap(auth => {\r\n          if (auth) {\r\n            return this.httpClient.put(`${this.apiService.MAIN_SERVER}esperanto/word`, {params});\r\n          } else {\r\n            return of({message: 'Вы не можете совершить эту операцию!'});\r\n          }\r\n        })\r\n      );\r\n    } else {\r\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Возвращает список необходимых слов по названию листа\r\n   * @param q название документа\r\n   */\r\n  public getWordsFromJSON(q: string): Observable<IWord[]> {\r\n    return this.httpClient.get<IWord[]>(`./assets/esperanto/_${q}.json`);\r\n  }\r\n\r\n  /**\r\n   * radiko de la vorto\r\n   * Take root (ПОлучает корень слова)\r\n   * @param type string\r\n   * @param word string\r\n   */\r\n  public makeRoot(type: string, word: string): string {\r\n    switch (type) {\r\n      case 'infinitiveVerb':\r\n        return word.toLowerCase().slice(0, -1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * preterito verbo\r\n   * Create past verb using + is to root (Создает глагол прошедшего воемени путем добавления к корню is)\r\n   * @param verb string\r\n   */\r\n  public makePastVerb(verb: string): string {\r\n    return this.makeRoot('infinitiveVerb', verb) + 'is';\r\n  }\r\n\r\n  /**\r\n   * nuna verbo\r\n   * Create present verb using + as to root (Создает глагол настоящего воемени путем добавления к корню as)\r\n   * @param verb string\r\n   */\r\n  public makePresentVerb(verb: string): string {\r\n    return this.makeRoot('infinitiveVerb', verb) + 'as';\r\n  }\r\n\r\n  /**\r\n   * estonta verbo\r\n   * Create future verb using + os to root (Создает глагол будущего воемени путем добавления к корню os)\r\n   * @param verb string\r\n   */\r\n  public makeFutureVerb(verb: string): string {\r\n    return this.makeRoot('infinitiveVerb', verb) + 'os';\r\n  }\r\n\r\n  /**\r\n   * infinitivo\r\n   * Create infinitive verb by adding i to root (Создаем инфинитив глагола путем добавления к корню i)\r\n   * @param root string\r\n   */\r\n  public makeInfinitiveVerb(root: string): string {\r\n    return root + 'i';\r\n  }\r\n\r\n  /**\r\n   * adjektivo\r\n   * Create an adjective by adding a to root (Создаем прилагательное добавлением a к корню)\r\n   * @param root string\r\n   */\r\n  public makeAdjective(root: string): string {\r\n    return root + 'a';\r\n  }\r\n\r\n  /**\r\n   * adverbo\r\n   * Create an adverb by adding e to root (Создаем наречие добавлением e к корню)\r\n   * @param root string\r\n   */\r\n  public makeAdverb(root: string): string {\r\n    return root + 'e';\r\n  }\r\n\r\n  /**\r\n   * substantivo\r\n   * Create a noun by adding a to the root (Создаем существительное добавлением o к корню)\r\n   * @param root string\r\n   */\r\n  public makeNoun(root: string): string {\r\n    return root + 'o';\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {SharedModule} from './shared/shared.module';\r\nimport {SocratesModule} from './modules/socrates/socrates.module';\r\nimport {BlogModule} from './modules/blog/blog.module';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {NotFoundComponent} from './shared/components/not-found/not-found.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {LanguagesModule} from './modules/languages/languages.module';\r\nimport {IndexComponent} from './shared/components/index/index.component';\r\nimport {AutoHRModule} from './modules/auto-hr/auto-hr.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NotFoundComponent,\r\n    IndexComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    BlogModule,\r\n    SocratesModule,\r\n    LanguagesModule,\r\n    AutoHRModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SocratesRoutingModule { }\r\n","import {Component, EventEmitter, HostBinding, Inject, OnInit, Output} from '@angular/core';\r\nimport {OverlayContainer} from '@angular/cdk/overlay';\r\nimport {AuthComponent} from '../auth/auth.component';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {ApiService} from '../../../core/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Output() sidenav = new EventEmitter();\r\n  @HostBinding('class') componentCssClass = 'my-theme';\r\n\r\n  constructor(\r\n    public apiService: ApiService,\r\n    public overlayContainer: OverlayContainer,\r\n    public dialog: MatDialog) {\r\n  }\r\n\r\n  toggleTheme(): void {\r\n    this.componentCssClass === 'default-theme' ? this.componentCssClass = 'dark-theme' : this.componentCssClass = 'default-theme';\r\n    this.overlayContainer.getContainerElement().classList.add(this.componentCssClass);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sidenavToggle(): void {\r\n    this.sidenav.emit();\r\n  }\r\n\r\n  openAuth(): void {\r\n    const dialogRef = this.dialog.open(AuthComponent, {\r\n      panelClass: [''],\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<mat-toolbar>\r\n  <div fxHide fxShow.lt-md>\r\n    <div><a (click)=\"sidenavToggle()\">\r\n      <mat-icon fxLayout fxFlex>menu</mat-icon>\r\n    </a></div>\r\n  </div>\r\n  <div class=\"header-logo\">\r\n    <img src=\"assets/img/logo_golem.png\" alt=\"logo_golem.png\">\r\n    <a [routerLink]=\"['']\">Логово Голема</a>\r\n  </div>\r\n  <div fxLayout fxFlex fxLayoutAlign=\"flex-end\">\r\n    <ul class=\"toolbar-list\">\r\n      <li *ngIf=\"(apiService.isAuth | async) === true\" fxHide.lt-md><a [routerLink]=\"['']\">Профиль </a></li>\r\n      <li fxHide.lt-md><a [routerLink]=\"['esperanto']\">Эсперанто </a></li>\r\n      <li fxHide.lt-md><a [routerLink]=\"['english']\">Английский</a></li>\r\n      <li fxHide.lt-md><a [routerLink]=\"['blog']\">Блог </a></li>\r\n      <li fxHide.lt-md><a [routerLink]=\"['socrates']\">Socrates </a></li>\r\n      <li *ngIf=\"(apiService.isAuth | async) === true\" fxHide.lt-md (click)=\"apiService.logout()\"><a>Выйти</a></li>\r\n<!--      <li *ngIf=\"(apiService.isAuth | async) === false\" fxHide.lt-md (click)=\"openAuth()\"><a>Войти</a></li>-->\r\n      <li *ngIf=\"false\" fxHide.lt-md (click)=\"openAuth()\"><a>Войти</a></li>\r\n      <li><a (click)=\"toggleTheme()\">\r\n        <mat-icon>brightness_medium</mat-icon>\r\n      </a></li>\r\n    </ul>\r\n  </div>\r\n</mat-toolbar>\r\n","import {IndexComponent} from './pages/index/index.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {WordListComponent} from '../../shared/components/word-list/word-list.component';\r\nimport {WordCardComponent} from '../../shared/components/word-card/word-card.component';\r\nimport {EnglishSentencesCreatorComponent} from './pages/english-sentences-creator/english-sentences-creator.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: IndexComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'vortlisto',\r\n    component: WordListComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'vortlisto/:wordList',\r\n    component: WordListComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'vortokarto/',\r\n    component: WordCardComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'vortokarto/:wordList',\r\n    component: WordCardComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'wordList',\r\n    component: WordListComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'wordList/:wordList',\r\n    component: WordListComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'wordCard/',\r\n    component: WordCardComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'wordCard/:wordList',\r\n    component: WordCardComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'sentences-creator',\r\n    component: EnglishSentencesCreatorComponent,\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LanguagesRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {IndexComponent} from './pages/index/index.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'task/:task_id',\n    component: IndexComponent\n  },\n  {\n    path: '',\n    component: IndexComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AutoHRRoutingModule {\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {IListWord} from '../../models/esperanto/word_list.interface';\r\nimport {EsperantoService} from '../../../core/services/esperanto/esperanto.service';\r\nimport {Router} from '@angular/router';\r\nimport {ApiService} from '../../../core/services/api.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {AddListComponent} from '../popup/add-list/add-list.component';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-word-lists',\r\n  templateUrl: './word-lists.component.html',\r\n  styleUrls: ['./word-lists.component.scss']\r\n})\r\nexport class WordListsComponent implements OnInit, OnDestroy {\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n  vortlistoj$: Observable<IListWord[]>;\r\n  mode: 'russian' | 'english' | 'esperanto' = 'english';\r\n\r\n  constructor(\r\n    public esperantoService: EsperantoService,\r\n    private router: Router,\r\n    public apiService: ApiService,\r\n    public dialog: MatDialog\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.vortlistoj$ = this.esperantoService.getWordLists();\r\n    switch (this.router.url.split('/')[1]) {\r\n      case 'russian' :\r\n        this.mode = 'russian';\r\n        break;\r\n      case 'esperanto':\r\n        this.mode = 'esperanto';\r\n        break;\r\n      case 'english':\r\n        this.mode = 'english';\r\n        break;\r\n    }\r\n  }\r\n\r\n  openListWord(title: string): void {\r\n    this.router.navigate([this.mode, this.mode === 'esperanto' ? 'vortlisto' : 'wordList', title]);\r\n  }\r\n\r\n  openCardExercise(title: string): void {\r\n    this.router.navigate([this.mode, this.mode === 'esperanto' ? 'vortokarto' : 'wordCard', title]);\r\n  }\r\n\r\n  addList(): void {\r\n    const dialogRef = this.dialog.open(AddListComponent, {\r\n      panelClass: ['of-auto'],\r\n      data: {}\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n      if (result.item) {\r\n        // TODO в будущем не перезагружать и работать со списком, который уже вызван\r\n        this.vortlistoj$ = this.esperantoService.getWordLists();\r\n      }\r\n    });\r\n  }\r\n\r\n  updateWordList(wordList): void {\r\n    const dialogRef = this.dialog.open(AddListComponent, {\r\n      panelClass: ['of-auto'],\r\n      data: {wordList}\r\n    });\r\n\r\n    dialogRef.afterClosed().pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(result => {\r\n      if (!result) {\r\n        return;\r\n      }\r\n      if (result.item) {\r\n        // TODO в будущем не перезагружать и работать со списком, который уже вызван\r\n        this.vortlistoj$ = this.esperantoService.getWordLists();\r\n      }\r\n    });\r\n  }\r\n\r\n  delWordList(vortListo: IListWord): void {\r\n    const areYouSure = confirm('Точно удалить список?');\r\n    if (areYouSure) {\r\n      this.esperantoService.delWordList(vortListo).pipe(\r\n        takeUntil(this.unsubscribe$)\r\n      ).subscribe(res => {\r\n        if (res.item) {\r\n          // TODO в будущем не перезагружать и работать со списком, который уже вызван\r\n          this.vortlistoj$ = this.esperantoService.getWordLists();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <mat-card *ngFor=\"let vortListo of vortlistoj$ | async\" class=\"esperanto-main-card\">\r\n    <mat-card-header class=\"w-100\">\r\n      <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\r\n        <h1 [routerLink]=\"[mode === 'esperanto' ? 'vortlisto' : 'wordList', vortListo.collection_caption]\"\r\n            [matTooltip]=\"'Карточки всех слов, которые есть в базе по теме <' + vortListo.collection_caption + '>'\" [matTooltipClass]=\"'toolTipClass'\"\r\n        >{{vortListo.caption[mode]}}</h1>\r\n        <div *ngIf=\"apiService.isAuth | async\">\r\n          <i (click)=\"updateWordList(vortListo)\" class=\"material-icons-outlined\">edit</i>\r\n          <i (click)=\"delWordList(vortListo)\" class=\"material-icons-outlined\">delete</i>\r\n        </div>\r\n      </mat-card-title>\r\n      <mat-card-subtitle>{{vortListo.level}}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div class=\"img-container\" [routerLink]=\"[mode === 'esperanto' ? 'vortlisto' : 'wordList', vortListo.collection_caption]\">\r\n      {{vortListo.cover}}\r\n    </div>\r\n    <mat-card-content [routerLink]=\"[mode === 'esperanto' ? 'vortlisto' : 'wordList', vortListo.collection_caption]\">\r\n      <p>\r\n        {{vortListo.caption.russian}}\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" (click)=\"openListWord(vortListo.collection_caption)\" [matTooltip]=\"'Открыть полный список слов по теме <' + vortListo.collection_caption + '> для просмотра'\" [matTooltipClass]=\"'toolTipClass'\">\r\n        <i class=\"material-icons-outlined\">remove_red_eye</i>\r\n      </button>\r\n      <button mat-raised-button color=\"primary\" (click)=\"openCardExercise(vortListo.collection_caption)\" [matTooltip]=\"'Открыть карточки проверки слов по теме <' + vortListo.collection_caption + '>'\" [matTooltipClass]=\"'toolTipClass'\">\r\n        <i class=\"material-icons-outlined\">view_stream</i>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card *ngIf=\"(apiService.isAuth | async) === true\" (click)=\"addList()\" class=\"esperanto-main-card add-list\">\r\n    <mat-card-content fxFlex fxLayoutAlign=\"center center\">\r\n      <button mat-raised-button color=\"primary\">\r\n        <i class=\"material-icons-outlined\">add_circle_outline</i>\r\n      </button>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ApiService} from '../../../core/services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  authForm: FormGroup;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    public fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<AuthComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createAuthForm();\r\n  }\r\n\r\n  createAuthForm(): void {\r\n    this.authForm = this.fb.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  closePopup(): void {\r\n    this.apiService.login(this.authForm.value).subscribe((res) => {\r\n      if (res.token) {\r\n        localStorage.setItem('token', res.token);\r\n        this.apiService.isAuth.next(true);\r\n        this.dialogRef.close();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div>\r\n  <form class=\"authForm\" [formGroup]=\"authForm\">\r\n    <mat-form-field>\r\n      <mat-label>login</mat-label>\r\n      <input matInput formControlName=\"email\" placeholder=\"login\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>password</mat-label>\r\n      <input matInput formControlName=\"password\" placeholder=\"password\">\r\n    </mat-form-field>\r\n    <button color=\"primary\" (click)=\"closePopup()\" mat-raised-button>Enter</button>\r\n  </form>\r\n</div>\r\n","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {ITask} from '../../../../shared/models/autoHR/question.model';\r\n\r\n@Component({\r\n  selector: 'app-mod-task-popup',\r\n  templateUrl: './mod-task-popup.component.html',\r\n  styleUrls: ['./mod-task-popup.component.css']\r\n})\r\nexport class ModTaskPopupComponent implements OnInit {\r\n  types = ['question', 'exercise'];\r\n  difficulties = ['beginner', 'junior', 'middle', 'senior'];\r\n  popularities = ['1', '2', '3', '4', '5'];\r\n  taskForm: FormGroup = new FormGroup({});\r\n\r\n  get prevDifficultyList() {\r\n    return this.taskForm.get('prevDifficulty') as FormArray;\r\n  }\r\n\r\n  get nextDifficultyList() {\r\n    return this.taskForm.get('nextDifficulty') as FormArray;\r\n  }\r\n\r\n  get linkList() {\r\n    return this.taskForm.controls.answer.get('link') as FormArray;\r\n  }\r\n\r\n  get textList() {\r\n    return this.taskForm.controls.answer.get('text') as FormArray;\r\n  }\r\n\r\n  get codeList() {\r\n    return this.taskForm.controls.answer.get('code') as FormArray;\r\n  }\r\n\r\n  get competenceList() {\r\n    return this.taskForm.get('competence') as FormArray;\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n              @Inject(MAT_DIALOG_DATA) public data: any,\r\n              public dialogRef: MatDialogRef<ModTaskPopupComponent>,) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.taskFormBuilder();\r\n    if (this.data?.task) {\r\n      this.taskFormPatcher(this.data.task);\r\n    }\r\n  }\r\n\r\n  taskFormBuilder(): void {\r\n    this.taskForm = this.fb.group({\r\n      question: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      prevDifficulty: this.fb.array([this.fb.control('')]),\r\n      nextDifficulty: this.fb.array([this.fb.control('')]),\r\n      answer: this.fb.group({\r\n        link: this.fb.array([this.fb.control('')]),\r\n        text: this.fb.array([this.fb.control('', Validators.required)]),\r\n        code: this.fb.array([this.fb.control('')]),\r\n      }),\r\n      type: ['', Validators.required],\r\n      difficulty: ['', Validators.required],\r\n      competence: this.fb.array([this.fb.control('', Validators.required)]),\r\n      popularity: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  taskFormPatcher(data: ITask): void {\r\n    // патчим форму\r\n    this.taskForm.patchValue({\r\n      question: data.question,\r\n      description: data.description,\r\n      type: data.type,\r\n      difficulty: data.difficulty,\r\n      popularity: data.popularity\r\n    });\r\n    // очищаем все списки\r\n    this.linkList.clear();\r\n    this.textList.clear();\r\n    this.codeList.clear();\r\n    this.prevDifficultyList.clear();\r\n    this.nextDifficultyList.clear();\r\n    this.competenceList.clear();\r\n    // наполняем массивы\r\n    data.answer.link?.forEach(link => {\r\n      this.linkList.push(this.fb.control(link));\r\n    });\r\n    data.answer.text?.forEach(text => {\r\n      this.textList.push(this.fb.control(text));\r\n    });\r\n    data.answer.code?.forEach(code => {\r\n      this.codeList.push(this.fb.control(code));\r\n    });\r\n    data.prevDifficulty?.forEach(pd => {\r\n      this.prevDifficultyList.push(this.fb.control(pd.id));\r\n    });\r\n    data.nextDifficulty?.forEach(nd => {\r\n      this.nextDifficultyList.push(this.fb.control(nd.id));\r\n    });\r\n    data.competence?.forEach(c => {\r\n      this.competenceList.push(this.fb.control(c));\r\n    });\r\n  }\r\n\r\n  addControl(controlName: string): void {\r\n    if (controlName === 'prevDifficulty') {\r\n      this.prevDifficultyList.push(this.fb.control(''));\r\n    }\r\n    if (controlName === 'nextDifficulty') {\r\n      this.nextDifficultyList.push(this.fb.control(''));\r\n    }\r\n    if (controlName === 'link') {\r\n      this.linkList.push(this.fb.control(''));\r\n    }\r\n    if (controlName === 'text') {\r\n      this.textList.push(this.fb.control(''));\r\n    }\r\n    if (controlName === 'code') {\r\n      this.codeList.push(this.fb.control(''));\r\n    }\r\n    if (controlName === 'competence') {\r\n      this.competenceList.push(this.fb.control(''));\r\n    }\r\n  }\r\n\r\n  removeControl(controlName: string, i: number): void {\r\n    if (controlName === 'prevDifficulty') {\r\n      this.prevDifficultyList.removeAt(i);\r\n    }\r\n    if (controlName === 'nextDifficulty') {\r\n      this.nextDifficultyList.removeAt(i);\r\n    }\r\n    if (controlName === 'link') {\r\n      this.linkList.removeAt(i);\r\n    }\r\n    if (controlName === 'text') {\r\n      this.textList.removeAt(i);\r\n    }\r\n    if (controlName === 'code') {\r\n      this.codeList.removeAt(i);\r\n    }\r\n    if (controlName === 'competence') {\r\n      this.competenceList.removeAt(i);\r\n    }\r\n  }\r\n\r\n  submit(): void {\r\n    let submitData = {...this.data.task, ...this.taskForm.value};\r\n    this.dialogRef.close(submitData);\r\n  }\r\n\r\n}\r\n","<div class=\"mod-task\">\r\n  <div [formGroup]=\"taskForm\" fxFlex fxLayout=\"row\" class=\"mod-task-form\">\r\n    <div class=\"big-parts\">\r\n      <h2>Основное</h2>\r\n      <div>\r\n        <mat-form-field [style.width.%]=\"100\">\r\n          <mat-label>Вопрос</mat-label>\r\n          <textarea class=\"w-100\" cdkTextareaAutosize formControlName=\"question\" [rows]=\"2\" matInput\r\n                    placeholder=\"Вопрос\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field [style.width.%]=\"100\">\r\n          <mat-label>Описание</mat-label>\r\n          <textarea class=\"w-100\" cdkTextareaAutosize formControlName=\"description\" [rows]=\"5\" matInput\r\n                    placeholder=\"Описание\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n      <h2>Ответы</h2>\r\n      <div>\r\n        <div formGroupName=\"answer\">\r\n          <h3>Текст</h3>\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"center\" class=\"mb-24\">\r\n            <div formArrayName=\"text\">\r\n              <div *ngFor=\"let text of textList.controls; let i=index\">\r\n                <mat-form-field [style.width.%]=\"94\">\r\n                  <mat-label>Ответ {{i}}</mat-label>\r\n                  <textarea class=\"w-100\" cdkTextareaAutosize [formControlName]=\"i\" [rows]=\"5\" matInput\r\n                            placeholder=\"\" value=\"{{text}}\"></textarea>\r\n                </mat-form-field>\r\n                <button mat-icon-button color=\"warn\" (click)=\"removeControl('text', i)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button mat-raised-button color=\"primary\" (click)=\"addControl('text')\">Добавить ответ</button>\r\n          </div>\r\n          <h3>Код</h3>\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"center\" class=\"mb-24\">\r\n            <div formArrayName=\"code\">\r\n              <div *ngFor=\"let code of codeList.controls; let i=index\">\r\n                <mat-form-field [style.width.%]=\"94\">\r\n                  <mat-label>Код {{i}}</mat-label>\r\n                  <textarea class=\"w-100\" cdkTextareaAutosize [formControlName]=\"i\" [rows]=\"5\" matInput\r\n                            placeholder=\"\" value=\"{{code}}\"></textarea>\r\n                </mat-form-field>\r\n                <button mat-icon-button color=\"warn\" (click)=\"removeControl('code', i)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button mat-raised-button color=\"primary\" (click)=\"addControl('code')\">Добавить код</button>\r\n          </div>\r\n          <h3>Ссылки</h3>\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"center\" class=\"mb-24\">\r\n            <div formArrayName=\"link\">\r\n              <div *ngFor=\"let link of linkList.controls; let i=index\">\r\n                <mat-form-field [style.width.%]=\"94\">\r\n                  <mat-label>Ссылка {{i}}</mat-label>\r\n                  <input matInput [formControlName]=\"i\" placeholder=\"\" value=\"{{link}}\">\r\n                </mat-form-field>\r\n                <button mat-icon-button color=\"warn\" (click)=\"removeControl('link', i)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <button mat-raised-button color=\"primary\" (click)=\"addControl('link')\">Добавить ссылку</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"small-parts\">\r\n      <h2>Описание вопроса</h2>\r\n      <div [style.width.%]=\"100\">\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"fill\">\r\n          <mat-label>Тип вопроса</mat-label>\r\n          <mat-select formControlName=\"type\">\r\n            <mat-option *ngFor=\"let type of types\" [value]=\"type\">\r\n              {{type}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"fill\">\r\n          <mat-label>Сложность вопроса</mat-label>\r\n          <mat-select formControlName=\"difficulty\">\r\n            <mat-option *ngFor=\"let difficulty of difficulties\" [value]=\"difficulty\">\r\n              {{difficulty}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <div>\r\n        <mat-form-field [style.width.%]=\"100\" appearance=\"fill\">\r\n          <mat-label>Популярность</mat-label>\r\n          <mat-select formControlName=\"popularity\">\r\n            <mat-option *ngFor=\"let popularity of popularities\" [value]=\"popularity\">\r\n              {{popularity}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </div>\r\n      <h2>Связи</h2>\r\n      <div class=\"mb-24\">\r\n        <div formArrayName=\"prevDifficulty\">\r\n          <div *ngFor=\"let prev of prevDifficultyList.controls; let i=index\">\r\n            <mat-form-field [style.width.%]=\"80\">\r\n              <mat-label>Предущий вопрос {{i}}</mat-label>\r\n              <input matInput [formControlName]=\"i\" placeholder=\"\" value=\"{{prev}}\">\r\n            </mat-form-field>\r\n            <button mat-icon-button color=\"warn\" (click)=\"removeControl('prevDifficulty', i)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"addControl('prevDifficulty')\">Добавить предыдущий вопрос\r\n        </button>\r\n      </div>\r\n      <div class=\"mb-24\">\r\n        <div formArrayName=\"nextDifficulty\">\r\n          <div *ngFor=\"let next of nextDifficultyList.controls; let i=index\">\r\n            <mat-form-field [style.width.%]=\"80\">\r\n              <mat-label>Следующий вопрос {{i}}</mat-label>\r\n              <input matInput [formControlName]=\"i\" placeholder=\"\" value=\"{{next}}\">\r\n            </mat-form-field>\r\n            <button mat-icon-button color=\"warn\" (click)=\"removeControl('nextDifficulty', i)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"addControl('nextDifficulty')\">Добавить следующий вопрос\r\n        </button>\r\n      </div>\r\n      <h2>Компетенции</h2>\r\n      <div class=\"mb-24\">\r\n        <div formArrayName=\"competence\">\r\n          <div *ngFor=\"let competence of competenceList.controls; let i=index\">\r\n            <mat-form-field [style.width.%]=\"80\">\r\n              <mat-label>Компетенции {{i}}</mat-label>\r\n              <input matInput [formControlName]=\"i\" placeholder=\"\" value=\"{{competence}}\">\r\n            </mat-form-field>\r\n            <button mat-icon-button color=\"warn\" (click)=\"removeControl('competence', i)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <button mat-raised-button color=\"primary\" (click)=\"addControl('competence')\">Добавить компетенцию</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"mod-task-actions\">\r\n    <button [disabled]=\"taskForm.invalid\" mat-raised-button color=\"primary\" (click)=\"submit()\">Сохранить</button>\r\n  </div>\r\n</div>\r\n","import {Injectable, OnDestroy} from '@angular/core';\r\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService implements OnDestroy {\r\n  public MAIN_SERVER = environment.MAIN_SERVER;\r\n  public MAIN_SERVER_AUTH = environment.MAIN_SERVER_AUTH;\r\n  public isAuth: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n    // this.authWithToken().pipe(\r\n    //   takeUntil(this.unsubscribe$)\r\n    // ).subscribe(isAuth => {\r\n    //   if (isAuth.error) {\r\n    //     this.isAuth.next(false);\r\n    //     localStorage.removeItem('token');\r\n    //   } else if (isAuth.token && isAuth.decoded) {\r\n    //     this.isAuth.next(true);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  // login(loginData): Observable<any> {\r\n  //   const authData = loginData;\r\n  //   return this.httpClient.post(`${this.MAIN_SERVER_AUTH}auth`, authData);\r\n  // }\r\n  login(loginData): Observable<any> {\r\n    const authData = loginData;\r\n    return of({token: '12345'});\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    this.isAuth.next(false);\r\n  }\r\n\r\n  checkToken(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.httpClient.post(`${this.MAIN_SERVER_AUTH}isAuth`, {token});\r\n  }\r\n\r\n  authWithToken(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.httpClient.post(`${this.MAIN_SERVER_AUTH}isAuth`, {token});\r\n  }\r\n\r\n  /**\r\n   * Возвращает данные из json по адресу\r\n   * @param q полный адрес\r\n   */\r\n  public getDataFromJSON(q: string): Observable<any[]> {\r\n    return this.httpClient.get<any[]>(q);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {AutoHRRoutingModule} from './auto-hr-routing.module';\nimport {IndexComponent} from './pages/index/index.component';\nimport {InterviewPopupComponent} from './components/interview-popup/interview-popup.component';\nimport {TaskAnswerPopupComponent} from './components/task-answer-popup/task-answer-popup.component';\nimport {ModTaskPopupComponent} from './components/mod-task-popup/mod-task-popup.component';\nimport {MaterialModule} from '../../shared/material.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {SharedModule} from '../../shared/shared.module';\n\n@NgModule({\n  declarations: [\n    IndexComponent,\n    InterviewPopupComponent,\n    TaskAnswerPopupComponent,\n    ModTaskPopupComponent\n  ],\n  imports: [\n    CommonModule,\n    AutoHRRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class AutoHRModule {\n}\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div [ngStyle]=\"{'text-align': 'center', 'margin-top': '16px'}\">\r\n  <h2>\r\n    Здравствуй, кибер-странник! <a [ngStyle]=\"{'text-decoration': 'underline', 'color': 'blue'}\" href=\"https://github.com/shmihshmih\" target=\"_blank\">Я</a> храню тут разные инструменты. Их можешь использовать и\r\n    <a target=\"_blank\" [matTooltip]=\"'Ты большая умница'\" href=\"https://ru.wikipedia.org/wiki/%D0%A1%D1%82%D1%80%D0%B0%D0%BD%D0%BD%D0%B8%D0%BA\" [ngStyle]=\"{'text-decoration': 'underline', 'color': 'blue'}\">ты</a>.\r\n  </h2>\r\n  <h2>\r\n    Вот некоторые из них:\r\n  </h2>\r\n</div>\r\n<div class=\"main-container\">\r\n\r\n  <mat-card class=\"esperanto-main-card\">\r\n    <mat-card-header class=\"w-100\">\r\n      <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\r\n        <h1 [routerLink]=\"['english', 'wordCard', 'irregular_verbs']\" [matTooltip]=\"'Карточки всех слов, которые есть в базе'\" [matTooltipClass]=\"'toolTipClass'\">Карточки слов</h1>\r\n      </mat-card-title>\r\n      <mat-card-subtitle>Тип: Генератор</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div class=\"img-container\" [routerLink]=\"['english', 'wordCard', 'irregular_verbs']\">\r\n      🦵🐶🌕🌏🍉⚽🤸‍♂️🚆⌚🛏🦵🐶🌕🌏🍉⚽🤸‍♂️🦵🐶🌕🌏🍉⚽🤸‍♂️🚆⌚🛏🦵🐶🌕🌏🍉⚽🤸‍♂️🦵🐶🌕🌏🍉⚽🤸‍♂️🚆⌚🛏🦵🐶🌕🌏🍉⚽🤸‍♂️\r\n    </div>\r\n    <mat-card-content [routerLink]=\"['english', 'wordCard', 'irregular_verbs']\">\r\n      <p>\r\n        Карточки слов\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" [routerLink]=\"['english', 'wordCard', 'irregular_verbs']\" [matTooltip]=\"'Открыть'\" [matTooltipClass]=\"'toolTipClass'\">\r\n        <i class=\"material-icons-outlined\">view_stream</i>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"esperanto-main-card\">\r\n    <mat-card-header class=\"w-100\">\r\n      <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\r\n        <h1 [routerLink]=\"['english', 'wordList']\" [matTooltip]=\"'Таблица-список всех слов, которые есть в базе'\" [matTooltipClass]=\"'toolTipClass'\">Список слов</h1>\r\n      </mat-card-title>\r\n      <mat-card-subtitle>Тип: Списки</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div class=\"img-container\" [routerLink]=\"['english', 'wordList']\">\r\n      🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷🎷\r\n    </div>\r\n    <mat-card-content [routerLink]=\"['english', 'wordList']\">\r\n      <p>\r\n        Список слов\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" [routerLink]=\"['english', 'wordList']\" [matTooltip]=\"'Открыть'\" [matTooltipClass]=\"'toolTipClass'\">\r\n        <i class=\"material-icons-outlined\">view_stream</i>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"esperanto-main-card\">\r\n    <mat-card-header class=\"w-100\">\r\n      <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\r\n        <h1 [routerLink]=\"['english', 'sentences-creator']\" [matTooltip]=\"'Генератор предложений по всем временам со всеми глаголами, которые есть в системе'\" [matTooltipClass]=\"'toolTipClass'\">Генератор предложений</h1>\r\n      </mat-card-title>\r\n      <mat-card-subtitle>Тип: Генератор</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div class=\"img-container\" [routerLink]=\"['english', 'sentences-creator']\">\r\n      🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂🪂\r\n    </div>\r\n    <mat-card-content [routerLink]=\"['english', 'sentences-creator']\">\r\n      <p>\r\n        Генератор предложений\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" [routerLink]=\"['english', 'sentences-creator']\" [matTooltip]=\"'Открыть'\" [matTooltipClass]=\"'toolTipClass'\">\r\n        <i class=\"material-icons-outlined\">view_stream</i>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"esperanto-main-card\">\r\n    <mat-card-header class=\"w-100\">\r\n      <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\r\n        <h1 [routerLink]=\"['blog', 'bookquest', 'thestainlesssteelrat', 1]\" [matTooltip]=\"'Демонстрация книжного квеста. Здесь просто \\<Стальная крыса\\> Гарри Гаррисона'\" [matTooltipClass]=\"'toolTipClass'\">Книжный квест</h1>\r\n      </mat-card-title>\r\n      <mat-card-subtitle>Тип: Генератор</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div class=\"img-container\" [routerLink]=\"['blog', 'bookquest', 'thestainlesssteelrat', 1]\">\r\n      📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️📗🧛‍♂️\r\n    </div>\r\n    <mat-card-content [routerLink]=\"['blog', 'bookquest', 'thestainlesssteelrat', 1]\">\r\n      <p>\r\n        Книжный квест\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" [routerLink]=\"['blog', 'bookquest', 'thestainlesssteelrat', 1]\" [matTooltip]=\"'Открыть'\" [matTooltipClass]=\"'toolTipClass'\">\r\n        <i class=\"material-icons-outlined\">view_stream</i>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n  <mat-card class=\"esperanto-main-card\">\r\n    <mat-card-header class=\"w-100\">\r\n      <mat-card-title fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\"w-100\">\r\n        <h1 [routerLink]=\"['autoHR']\" [matTooltip]=\"'Пройти собеседование или посмотреть вопросы и ответы'\" [matTooltipClass]=\"'toolTipClass'\">autoHR</h1>\r\n      </mat-card-title>\r\n      <mat-card-subtitle>Тип: Генератор + Списки</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <div class=\"img-container\" [routerLink]=\"['autoHR']\">\r\n      ⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓\r\n      ⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓\r\n      ⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓⌚📌🕵️‍♀️🧷👨‍💼👨‍🎓\r\n    </div>\r\n    <mat-card-content [routerLink]=\"['autoHR']\">\r\n      <p>\r\n        Генератор собеседований\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" [routerLink]=\"['autoHR']\" [matTooltip]=\"'Открыть'\" [matTooltipClass]=\"'toolTipClass'\">\r\n        <i class=\"material-icons-outlined\">view_stream</i>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n\r\n</div>\r\n<div>\r\n  <a href=\"https://github.com/shmihshmih\" target=\"_blank\">Find Me</a>\r\n</div>\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {ITask} from '../../../shared/models/autoHR/question.model';\nimport {IWord} from '../../../shared/models/esperanto/word.interface';\nimport {ApiService} from '../api.service';\nimport {switchMap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoHRService {\n\n  constructor(\n    private http: HttpClient,\n    private apiService: ApiService\n  ) {\n  }\n\n  // получить все вопросы\n  // getAllTasks(): Observable<ITask[]> {\n  //   return this.http.get<ITask[]>(`${this.apiService.MAIN_SERVER}autohr/questionList`);\n  // }\n  getAllTasks(): Observable<ITask[]> {\n    return this.http.get<ITask[]>(`./assets/collections/questionmodels.json`);\n  }\n\n  // добавить вопрос\n  addTask(newTask): Observable<any> {\n    const params = newTask;\n    const token = localStorage.getItem('token');\n    if (token) {\n      return this.apiService.checkToken().pipe(\n        switchMap((isAuth): Observable<any> => {\n          if (isAuth.error) {\n            return of(false);\n          } else if (isAuth.token && isAuth.decoded) {\n            return of(true);\n          }\n        }),\n        switchMap(auth => {\n          if (auth) {\n            return this.http.post(`${this.apiService.MAIN_SERVER}autohr/task`, {params});\n          } else {\n            return of({message: 'Вы не можете совершить эту операцию!'});\n          }\n        })\n      );\n    } else {\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\n    }\n  }\n\n  // удалить вопрос\n  delTask(newTask): Observable<any> {\n    const params = newTask._id;\n    const token = localStorage.getItem('token');\n    if (token) {\n      return this.apiService.checkToken().pipe(\n        switchMap((isAuth): Observable<any> => {\n          if (isAuth.error) {\n            return of(false);\n          } else if (isAuth.token && isAuth.decoded) {\n            return of(true);\n          }\n        }),\n        switchMap(auth => {\n          if (auth) {\n            return this.http.delete(`${this.apiService.MAIN_SERVER}autohr/task`, {params});\n          } else {\n            return of({message: 'Вы не можете совершить эту операцию!'});\n          }\n        })\n      );\n    } else {\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\n    }\n  }\n\n  // обновить вопрос\n  updateTask(task): Observable<any> {\n    const params = task;\n    const token = localStorage.getItem('token');\n    if (token) {\n      return this.apiService.checkToken().pipe(\n        switchMap((isAuth): Observable<any> => {\n          if (isAuth.error) {\n            return of(false);\n          } else if (isAuth.token && isAuth.decoded) {\n            return of(true);\n          }\n        }),\n        switchMap(auth => {\n          if (auth) {\n            return this.http.put(`${this.apiService.MAIN_SERVER}autohr/task`, {params});\n          } else {\n            return of({message: 'Вы не можете совершить эту операцию!'});\n          }\n        })\n      );\n    } else {\n      return of({error: 'NoAuth', message: 'Залогиньтесь!'});\n    }\n  }\n\n  getAllTasksByJSON(): Observable<ITask[]> {\n    return this.http.get<ITask[]>(`./assets/_tasks.json`);\n  }\n\n  getDifficulties(): Observable<any[]> {\n    const difficulties = [\n      'beginner', 'junior', 'middle', 'senior'\n    ];\n    return of(difficulties);\n  }\n\n  getCompetences(): Observable<any[]> {\n    const competences = [\n      'common questions', 'javascript', 'typescript', 'angular', 'react', 'nodejs', 'html', 'css', 'frontend', 'backend'\n    ];\n    return of(competences);\n  }\n\n  getPopularity(): Observable<any[]> {\n    const popularity = [\n      '1', '2', '3', '4', '5'\n    ];\n    return of(popularity);\n  }\n}\n","import {NotFoundComponent} from './shared/components/not-found/not-found.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {IndexComponent} from './shared/components/index/index.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'blog',\r\n    loadChildren: () => import('./modules/blog/blog.module').then(m => m.BlogModule)\r\n  },\r\n  {\r\n    path: 'socrates',\r\n    loadChildren: () => import('./modules/socrates/socrates.module').then(m => m.SocratesModule)\r\n  },\r\n  {\r\n    path: 'esperanto',\r\n    loadChildren: () => import('./modules/languages/languages.module').then(m => m.LanguagesModule)\r\n  },\r\n  {\r\n    path: 'english',\r\n    loadChildren: () => import('./modules/languages/languages.module').then(m => m.LanguagesModule)\r\n  },\r\n  {\r\n    path: 'autoHR',\r\n    loadChildren: () => import('./modules/auto-hr/auto-hr.module').then(m => m.AutoHRModule)\r\n  },\r\n  {\r\n    path: '',\r\n    component: IndexComponent,\r\n    pathMatch: 'full'\r\n  },\r\n  {path: '404', component: NotFoundComponent},\r\n  {path: '**', redirectTo: '/404'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, ElementRef, Inject, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {EsperantoService} from '../../../../core/services/esperanto/esperanto.service';\r\nimport {map, startWith, takeUntil} from 'rxjs/operators';\r\nimport {MatAutocomplete, MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\r\nimport {MatChipInputEvent} from '@angular/material/chips';\r\nimport {IListWord} from '../../../models/esperanto/word_list.interface';\r\n\r\n@Component({\r\n  selector: 'app-add-word',\r\n  templateUrl: './add-word.component.html',\r\n  styleUrls: ['./add-word.component.scss']\r\n})\r\nexport class AddWordComponent implements OnInit, OnDestroy {\r\n  // autocomplete list\r\n  wordLists: string[] = [];\r\n  selectedWordLists: string[] = [];\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  listCtrl = new FormControl();\r\n  filteredLists: Observable<string[]>;\r\n\r\n  @ViewChild('fruitInput') fruitInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\r\n\r\n  unsubscribe$: Subject<boolean> = new Subject();\r\n  wordForm: FormGroup;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public dialogRef: MatDialogRef<AddWordComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data,\r\n    private esperantoService: EsperantoService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createWordForm();\r\n    if (this.data && this.data.word) {\r\n      this.formPatcher(this.wordForm, this.data.word);\r\n      this.selectedWordLists = this.data.word.word_type;\r\n    }\r\n    this.esperantoService.getWordLists().pipe(\r\n      map((lists: IListWord[], i): string[] => {\r\n        return lists.map(list => list.collection_caption);\r\n      }),\r\n      takeUntil(this.unsubscribe$)\r\n    )\r\n      .subscribe(lists => {\r\n        this.wordLists = lists;\r\n        this.filteredLists = this.listCtrl.valueChanges.pipe(\r\n          startWith(null),\r\n          map((list: string[] | null) => list ? this._filter(list) : this.wordLists.slice()));\r\n      });\r\n  }\r\n\r\n  createWordForm(): void {\r\n    this.wordForm = this.fb.group({\r\n      word_type: [this.selectedWordLists, Validators.required],\r\n      esperanto: ['', Validators.required],\r\n      english: ['', Validators.required],\r\n      russian: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  formPatcher(form, data): void {\r\n    form.patchValue({\r\n      ...data\r\n    });\r\n  }\r\n\r\n  addWord(): void {\r\n    this.esperantoService.addWord(this.wordForm.value).pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(res => {\r\n      if (!res.error) {\r\n        this.dialogRef.close(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateWord(wordId): void {\r\n    this.esperantoService.updateWord({_id: wordId, ...this.wordForm.value}).pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(res => {\r\n      if (!res.error) {\r\n        this.dialogRef.close(res);\r\n      }\r\n    });\r\n  }\r\n\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n\r\n    // Add our fruit\r\n    if ((value || '').trim()) {\r\n      this.selectedWordLists.push(value.trim());\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n\r\n    this.listCtrl.setValue(null);\r\n  }\r\n\r\n  remove(list: string): void {\r\n    const index = this.selectedWordLists.indexOf(list);\r\n\r\n    if (index >= 0) {\r\n      this.selectedWordLists.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selected(event: MatAutocompleteSelectedEvent): void {\r\n    this.selectedWordLists.push(event.option.viewValue);\r\n    this.fruitInput.nativeElement.value = '';\r\n    this.listCtrl.setValue(null);\r\n  }\r\n\r\n  private _filter(value: string[]): string[] {\r\n    return this.wordLists\r\n      .filter((list: string) => !value.includes(list));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n}\r\n","<div>\r\n  <form fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\" [formGroup]=\"wordForm\">\r\n\r\n    <mat-form-field class=\"example-chip-list\">\r\n      <mat-label>Списки</mat-label>\r\n      <mat-chip-list #chipList aria-label=\"List selection\">\r\n        <mat-chip\r\n          *ngFor=\"let list of selectedWordLists\"\r\n          [selectable]=\"selectable\"\r\n          [removable]=\"removable\"\r\n          (removed)=\"remove(list)\">\r\n          {{list}}\r\n          <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n        </mat-chip>\r\n        <input\r\n          placeholder=\"New list...\"\r\n          #fruitInput\r\n          [formControl]=\"listCtrl\"\r\n          [matAutocomplete]=\"auto\"\r\n          [matChipInputFor]=\"chipList\"\r\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\r\n          (matChipInputTokenEnd)=\"add($event)\">\r\n      </mat-chip-list>\r\n      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\r\n        <mat-option *ngFor=\"let list of filteredLists | async\" [value]=\"list\">\r\n          {{list}}\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-label>esperanto</mat-label>\r\n      <input matInput formControlName=\"esperanto\" placeholder=\"esperanto\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>english</mat-label>\r\n      <input matInput formControlName=\"english\" placeholder=\"english\">\r\n    </mat-form-field>\r\n    <mat-form-field>\r\n      <mat-label>russian</mat-label>\r\n      <input matInput formControlName=\"russian\" placeholder=\"russian\">\r\n    </mat-form-field>\r\n    <button *ngIf=\"!data.word\" mat-raised-button (click)=\"addWord()\" color=\"primary\">add</button>\r\n    <button *ngIf=\"data && data.word && data.word._id\" mat-raised-button (click)=\"updateWord(this.data.word._id)\" color=\"primary\">update</button>\r\n  </form>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}